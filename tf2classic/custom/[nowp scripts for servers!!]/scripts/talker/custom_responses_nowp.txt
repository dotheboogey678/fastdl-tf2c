//-----------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------//
//-------------------Custom Response Rule File -- This is to add minor New-Old Weapons Taunt / Response Tweaks!----------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------//
//-----------------------------------------------------------------------------------------------------------------------------------------//

//------------------------------------//
//--New-Old Weapons Custom Responses--//
//------------------------------------//

//------------------------------------------------------------------------------------------------------------//
// Misc. (Stuff to load first since other things need it)
//------------------------------------------------------------------------------------------------------------//
	criterion "1PercentChance"   			"randomnum" "=>99"								required	// Whatever increments of 5 aren't present are already defined in response_rules.txt - this is just every single other one of them
	criterion "15PercentChance"  			"randomnum" ">85"								required
	criterion "25PercentChance"  			"randomnum" ">75"								required
	criterion "35PercentChance"  			"randomnum" ">65"								required
	criterion "45PercentChance"  			"randomnum" ">55"								required
	criterion "55PercentChance"  			"randomnum" ">45"								required
	criterion "60PercentChance"  			"randomnum" ">40"								required
	criterion "65PercentChance"  			"randomnum" ">35"								required
	criterion "70PercentChance"  			"randomnum" ">30"								required
	criterion "80PercentChance"  			"randomnum" ">20"								required
	criterion "85PercentChance"  			"randomnum" ">15"								required
	criterion "90PercentChance"  			"randomnum" ">10"								required
	criterion "95PercentChance"  			"randomnum" "=>5"								required
	criterion "99PercentChance"  			"randomnum" "=>1"								required
	criterion "PlayerIsLookingDown" 		"playerpitch" ">=60" 							"required" weight 10
	criterion "PlayerIsLookingSlightlyDown" "playerpitch" ">=35" 							"required" weight 10
	criterion "PlayerIsLookingSlightlyUp" 	"playerpitch" "<=-35" 							"required" weight 10
//	criterion "IsCrossHairAlly" 			"crosshair_ally" "Yes" 							"required"	// Do not work
//	criterion "IsNotCrossHairAlly" 			"crosshair_ally" "!=Yes" 						"required"


//	criterion "LowHealthContext" 			"playerhealthfrac" "<0.25"						required	// Under 25% HP; For reference only
	criterion "HealthKindaEmpty" 			"playerhealthfrac" "<0.35" 						required	// Under 35% HP
	criterion "HealthUnderHalf" 			"playerhealthfrac" "<0.5" 						required	// Under 50% HP
//	criterion "BonkHealthContext" 			"playerhealthfrac" "<0.641" 					required	// Under 64% HP; For reference only
	criterion "HealthSlightlyDamaged" 		"playerhealthfrac" "<0.75" 						required	// Under 75% HP
	criterion "HealthBarelyDamaged" 		"playerhealthfrac" "<0.9" 						required	// Under 90% HP

	criterion "HealthNotSuperLow"			"playerhealthfrac" ">0.25"						required 	// Over 25% HP
//	criterion "CaberHealthContext" 			"playerhealthfrac" ">0.429" 					required	// Over 43% HP; For reference only
//	criterion "NotLowHealth" 				"playerhealthfrac" ">0.5" 						required	// Over 50% HP; For reference only
	criterion "HealthKindaFull" 			"playerhealthfrac" ">0.65" 						required	// Over 65% HP
	criterion "HealthMostlyFull" 			"playerhealthfrac" ">0.75" 						required	// Over 75% HP

	criterion "HealthSlightlyOverhealed" 	"playerhealthfrac" ">1.15" 						required	// Overhealed 115% HP; Classes are unlikely to get extremely full Overheal off of lifesteal weapons
//	criterion "SuperHighHealthContext" 		"playerhealthfrac" ">1.400" 					required	// Overhealed 140% HP; For reference only

	criterion "WeaponIsNotMIRV" 			"item_name" "!=MIRV" 							"required" weight 35	// Remove eventually
	criterion "WeaponIsAAGunType" 			"playerweapon" "tf_weapon_aagun" 				"required" weight 10
	criterion "WeaponIsNotAAGun" 			"item_name" "!=Anti-Aircraft Cannon" 			"required" weight 35	// Remove eventually
	criterion "WeaponIsBowType" 			"playerweapon" "tf_weapon_compound_bow" 		"required" weight 10
	criterion "WeaponIsNotHuntsman" 		"item_name" "!=The Huntsman" 					"required" weight 35	// Remove eventually
	criterion "WeaponIsTHEUmbrella" 		"item_name" "TF_WEAPON_UMBRELLA" 				"required" weight 35
	criterion "WeaponIsNotTheUmbrella" 		"item_name" "!=TF_WEAPON_UMBRELLA" 				"required" weight 35
	criterion "WeaponIsNotUmbrellaType" 	"playerweapon" "!=tf_weapon_umbrella" 			"required" weight 35	// Remove eventually
	criterion "WeaponIsNotCubemapper" 		"playerweapon" "!=tf_weapon_cubemapper" 		"required" weight 25

	criterion "IsNotWeaponSecondary" 		"weaponmode" "!=secondary"						required
	criterion "WeaponIsThrowMIRV" 			"playerweapon" "tf_weapon_grenade_mirv" 		"required" weight 10
	criterion "WeaponIsBrickNOWP" 			"item_name" "TF_WEAPON_BRICK" 					"required" weight 35
	criterion "WeaponIsNotBrickNOWP" 		"item_name" "!=TF_WEAPON_BRICK" 				"required" weight 35

	criterion "WeaponIsCrowbar" 			"item_name" "TF_WEAPON_CROWBAR" 				"required" weight 35
	criterion "WeaponIsPan" 				"item_name" "TF_WEAPON_FRYING_PAN" 				"required" weight 35
	criterion "WeaponIsNotPan" 				"item_name" "!=TF_WEAPON_FRYING_PAN" 			"required" weight 35
	criterion "WeaponIsObjector" 			"item_name" "TF_WEAPON_PICKET" 					"required" weight 35
	criterion "WeaponIsDMFists" 			"item_name" "TF_WEAPON_DM_FISTS" 				"required" weight 35
	criterion "WeaponIsNotDMFists" 			"item_name" "!=TF_WEAPON_DM_FISTS" 				"required" weight 35
	criterion "ItemIsNoisemaker" 			"item_name" "TF_ITEM_NOISEMAKER" 				"required" weight 35
	
	criterion "HasntThrownRecently" 		"ThrewSomethingRecently" "!=1" 					"required" weight 35
	criterion "WeaponFunctionCooledDown" 	"SetWeaponDelayTime" "!=1" 						"required" weight 35
	Criterion "ProbablyBlastJumping" 		"BlastJumping" "1" 								"required" weight 35
	Criterion "NotBlastJumping" 			"BlastJumping" "!=1" 							"required" weight 35
	Criterion "IsNotStillLaughing" 			"Laughing" "!=1" 								"required" weight 35
	Criterion "WeaponIsStillSpeaking" 		"WeaponSpeaking" "1" 							"required" weight 35
	Criterion "WeaponIsNotSpeaking" 		"WeaponSpeaking" "!=1" 							"required" weight 75

//------------------------------------//
// Hacky Includes
//------------------------------------//

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
// Laugh Taunt (Frying Pan)
	response "ScoutTauntLaugh"																// Add a proper knee-slapping sound
	{
		scene "scenes/player/Scout/low/taunt_laugh.vcd"
	}
	response "SoldierTauntLaugh"															// Soft helmet move sound as he wipes his tears
	{
		scene "scenes/player/Soldier/low/taunt_laugh.vcd"
	}
	response "PyroTauntLaugh"																// Add gear rustling as Pyro bends forward
	{
		scene "scenes/player/pyro/low/taunt_laugh.vcd"
	}
	response "DemomanTauntLaugh"
	{
		scene "scenes/player/demoman/low/taunt_laugh.vcd"
	}
	response "HeavyTauntLaugh"																// Add rustling as Heavy swings his body around
	{
		scene "scenes/player/heavy/low/taunt_laugh.vcd"
	}
	response "EngineerTauntLaugh"
	{
		scene "scenes/player/Engineer/low/taunt_laugh.vcd"
	}
	response "MedicTauntLaugh"																// Gear jostling, footstep noises as he jumps and lands
	{
		scene "scenes/player/medic/low/taunt_laugh.vcd"
	}
	response "SniperTauntLaugh"
	{
		scene "scenes/player/Sniper/low/taunt_laugh.vcd"
	}
	response "SpyTauntLaugh"
	{
		scene "scenes/player/spy/low/taunt_laugh.vcd"
	}

// Replay Taunt (Objector)
	response "ScoutTauntReplay"																// Rustle when leaning back
	{
		scene "scenes/player/Scout/low/taunt_replay.vcd"
	}
	response "SoldierTauntReplay"
	{
		scene "scenes/player/Soldier/low/taunt_replay.vcd"
	}
	response "PyroTauntReplay"																// Rustle when snapping to poses
	{
		scene "scenes/player/pyro/low/taunt_replay.vcd"
		scene "scenes/player/pyro/low/taunt_replay2.vcd"
	}
	response "DemomanTauntReplay"															// Gear jingling as he moves
	{
		scene "scenes/player/demoman/low/taunt_replay.vcd"
	}
	response "HeavyTauntReplay"																// Maybe soft rustling as he nods his head
	{
		scene "scenes/player/heavy/low/taunt_replay.vcd"
	}
	response "EngineerTauntReplay"															// Rustling as he hops + lands
	{
		scene "scenes/player/Engineer/low/taunt_replay.vcd"
	}
	response "MedicTauntReplay"
	{
		scene "scenes/player/medic/low/taunt_replay.vcd"
	}
	response "SniperTauntReplay"
	{
		scene "scenes/player/Sniper/low/taunt_replay.vcd"
	}
	response "SpyTauntReplay"																// Short rustle
	{
		scene "scenes/player/spy/low/taunt_replay.vcd"
	}

// High-Five (Crowbar)																		// Hold Taunts don't work, so this is just the latter half of High-Five | Add a swoosh for all-class' high-five movement
	response "ScoutTauntHi5"																// Rustle as he shakes his hand | another when he does either of the poses
	{
		scene "scenes/player/Scout/low/taunt_hi5_a.vcd"
		scene "scenes/player/Scout/low/taunt_hi5_b.vcd"
	}
	response "SoldierTauntHi5"																// Helmet jingle | Rustling for the fist-pumps
	{
		scene "scenes/player/Soldier/low/taunt_hi5_a.vcd"
		scene "scenes/player/Soldier/low/taunt_hi5_b.vcd"
	}
	response "PyroTauntHi5"																	// Knuckle-cracking | Gear jingle / clapping for the 2 poses respectively
	{
		scene "scenes/player/pyro/low/taunt_hi5_a.vcd"
		scene "scenes/player/pyro/low/taunt_hi5_b.vcd"
	}
	response "DemomanTauntHi5"																// Rustling as he rubs his hands | Gear jingle for the thumbs-up
	{
		scene "scenes/player/demoman/low/taunt_hi5_a.vcd"
		scene "scenes/player/demoman/low/taunt_hi5_b.vcd"
	}
	response "HeavyTauntHi5"																// Gear / cloth rustling with the shrug | "Straining" cloth noise as he flexes (like his vest is stretching)
	{
		scene "scenes/player/heavy/low/taunt_hi5_a.vcd"
		scene "scenes/player/heavy/low/taunt_hi5_b.vcd"
	}
	response "EngineerTauntHi5"																// Glove-pull noise | I think I need to look into why he only has one sequence for both hi-5's
	{
		scene "scenes/player/Engineer/low/taunt_hi5_a.vcd"
		scene "scenes/player/Engineer/low/taunt_hi5_b.vcd"
	}
	response "MedicTauntHi5"																// Soft gear jingle as he adjust his glasses
	{
		scene "scenes/player/medic/low/taunt_hi5_a.vcd"
		scene "scenes/player/medic/low/taunt_hi5_b.vcd"
	}
	response "SniperTauntHi5"																// Soft rustle as he beckons | Strong rustle with the hands-over-head
	{
		scene "scenes/player/Sniper/low/taunt_hi5_a.vcd"
		scene "scenes/player/Sniper/low/taunt_hi5_b.vcd"
	}
	response "SpyTauntHi5"																	// Soft rustle as he "checks his watch"
	{
		scene "scenes/player/spy/low/taunt_hi5_a.vcd"
		scene "scenes/player/spy/low/taunt_hi5_b.vcd"
	}

// Conga (N/a)																				// Movement / Hold-Taunts aren't really functional, and initiating Conga here makes you dance in place unable to move at all for like 15s straight
	response "ScoutTauntConga"																// For all classes: bake in footstep noises + clothes rustling + gear + claps
	{
		scene "scenes/player/Scout/low/conga.vcd"
	}
	response "SoldierTauntConga"
	{
		scene "scenes/player/Soldier/low/conga.vcd"
	}
	response "PyroTauntConga"
	{
		scene "scenes/player/pyro/low/conga.vcd"
	}
	response "DemomanTauntConga"
	{
		scene "scenes/player/demoman/low/conga.vcd"
	}
	response "HeavyTauntConga"
	{
		scene "scenes/player/heavy/low/conga.vcd"
	}
	response "EngineerTauntConga"
	{
		scene "scenes/player/Engineer/low/conga.vcd"
	}
	response "MedicTauntConga"
	{
		scene "scenes/player/medic/low/conga.vcd"
	}
	response "SniperTauntConga"
	{
		scene "scenes/player/Sniper/low/conga.vcd"
	}
	response "SpyTauntConga"
	{
		scene "scenes/player/spy/low/conga.vcd"
	}





//------------------------------------------------------------------------------------------------------------//
// Scout
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsShortstopPrimary" 	"item_name" "TF_WEAPON_SHORTSTOP" 				"required" weight 35
	criterion "WeaponIsFAN" 				"item_name" "TF_WEAPON_DOUBLE_BARREL" 			"required" weight 35
	criterion "WeaponIsPepBlaster" 			"item_name" "TF_WEAPON_BFB_SCATTERGUN" 			"required" weight 35
	criterion "WeaponIsLeverRifle" 			"item_name" "TF_WEAPON_LEVER_RIFLE" 			"required" weight 35
	criterion "WeaponIsBaseballGun" 		"item_name" "TF_WEAPON_BASEBALLGUN" 			"required" weight 35
	criterion "WeaponIsMakeshiftScatter" 	"item_name" "TF_WEAPON_SODA_POPPER" 			"required" weight 35
	criterion "WeaponIsBrickLauncher" 		"item_name" "TF_WEAPON_BRICKLAUNCHER" 			"required" weight 35
	criterion "WeaponIsBlunderbussSct" 		"item_name" "TF_WEAPON_BLUNDERBUSS_SCOUT" 		"required" weight 35
	criterion "WeaponIsUltimateJumper" 		"item_name" "TF_WEAPON_ULTIMATE_JUMPER" 		"required" weight 35

	criterion "WeaponIsBonk" 				"item_name" "TF_WEAPON_ENERGY_DRINK" 			"required" weight 35
	criterion "WeaponIsCleaver" 			"item_name" "TF_WEAPON_CLEAVER" 				"required" weight 35
	criterion "WeaponIsMiami" 				"item_name" "TF_WEAPON_COMBATSMG" 				"required" weight 35
	criterion "WeaponIsWinger" 				"item_name" "TF_WEAPON_WINGER" 					"required" weight 35
	criterion "WeaponIsCritCola" 			"item_name" "TF_WEAPON_ENERGY_DRINK_CRIT" 		"required" weight 35

	criterion "WeaponIsFish" 				"item_name" "TF_WEAPON_HOLYMACKEREL" 			"required" weight 35
	criterion "WeaponIsSandman" 			"item_name" "TF_WEAPON_WOOD_BAT" 				"required" weight 35
	criterion "WeaponIsGunbaiFan" 			"item_name" "TF_WEAPON_SHOGUN_WARFAN" 			"required" weight 35
	criterion "WeaponIsLavaMace" 			"item_name" "TF_WEAPON_LAVA_MACE" 				"required" weight 35
	criterion "WeaponIsC4Bat" 				"item_name" "TF_WEAPON_C4BAT" 					"required" weight 35
	criterion "WeaponIsHelpingHand" 		"item_name" "TF_WEAPON_HELPING_HAND" 			"required" weight 35
	criterion "WeaponIsCandyCane" 			"item_name" "TF_WEAPON_CANDYCANE" 				"required" weight 35

	Criterion "ScoutDrinkOffCooldown" 		"ScoutDrankRecently" "!=1" 						"required" weight 0
	Criterion "ScoutBuffTempCond" 			"ScoutBuffedTemp" "1" 							"required" weight 0	// Awful hack fix
	Criterion "LoadoutIsCritCola" 			"loadout_slot_secondary" "Crit-a-Cola" 			"required" weight 35
	Criterion "ScoutCritNotTriggered" 		"ScoutCrit" "!=1" 								"required" weight 0	// Just here since the criteria for the original seem very messy
	Criterion "ScoutCritTriggered" 			"ScoutCrit" "1" 								"required" weight 0

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "ScoutTauntPrimaryDouble"
	{
		scene "scenes/player/scout/low/taunt01_alt_vocal01.vcd"
		scene "scenes/player/scout/low/taunt01_alt_vocal02.vcd"
		scene "scenes/player/scout/low/taunt01_alt_vocal03.vcd"
	}
	response "ScoutTauntPlayerItem1"														// Long enough to heal one tick of HP if using Sandvich base
	{
		scene "scenes/player/scout/low/taunt04_v1.vcd"
	}
	response "ScoutTauntGrandSlam"															// No code for Taunt Kill, just visual
	{
		scene "scenes/player/scout/low/taunt05_v1.vcd"
	}
	response "ScoutTauntBatWhirl"															// Needs external assets: Particles, or remove them from anim event | Add rustling / whirling noises as he twirls the Cleaver
	{
		scene "scenes/player/scout/low/taunt_bat_man.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-ScoutTauntShortstop															// Shortstop modifier so it's FINALLY fixed, for real, again...
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsShortstopPrimary
		response ScoutTauntSecondary
	}
	rule NOWP-ScoutTauntBaseballGun															// Since BBG is a Grenade Launcher (internally considered a Secondary), force it to do the Scattergun taunt
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsBaseballGun
		response ScoutTauntPrimary
	}
	rule NOWP-ScoutTauntBrickLauncher														// Brick Launcher split fix
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsBrickLauncher
		response ScoutTauntPrimary
	}
	rule NOWP-ScoutTauntUltimateJumper														// Brick Launcher split revamp split fix
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsUltimateJumper
		response ScoutTauntPrimary
	}
	rule NOWP-ScoutTauntDrink																// If Scout has the Bonk, do the Thriller taunt (Consumables don't have taunts by default) | TODO: Backport Live TF2 sip taunt
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsBonk
		ApplyContext "ScoutDrankRecently:1:22"												// Cd of 22s between responses, which is the downtime of Bonk in Live TF2
		ApplyContext "ScoutBuffedTemp:1:3"													// Extra conditional to fix / tweak the civ boost response. Only lasts as long as the taunt does!
		response ScoutTauntHalloween
	}
	rule NOWP-ScoutTauntDrinkCrit
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsCritCola
		ApplyContext "ScoutDrankRecently:1:22"
		response ScoutTauntHalloween
	}
	rule NOWP-DrankBonkScout																// When Scout drinks the Bonk, fire this response (buffered by 2-3 secs), with about 20s downtime
	{
		criteria ConceptAteFood IsScout WeaponIsBonk ScoutIsNotInvuln
		ApplyContext "ScoutInvuln:1:8"
		Response PlayerDodgingScout
	}
	rule NOWP-DrankCritColaScout															// Same as above, with Crit-a-Cola's conditionals instead
	{
		criteria ConceptAteFood IsScout WeaponIsCritCola ScoutCritNotTriggered
		ApplyContext "ScoutCrit:1:8"														// Different criteria since apparently this is scuffed and calling the original responses without me wanting it to. fUCK
		Response InvulnerableSpeechScout
	}
	rule NOWP-ScoutTauntC4Bat																// Hack-fix for C4 Bat since they removed the internals AARGH
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsC4Bat
		response ScoutTauntMelee
	}

	rule NOWP-ScoutTauntThrowable															// Throwables don't have a taunt by default, so make it work!
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsThrowMIRV
		response ScoutTauntSecondary
	}
	rule NOWP-ScoutTauntCleaver
	{
		criteria ConceptPlayerTaunt IsScout WeaponIsCleaver
		response ScoutTauntMelee
	}
	rule NOWP-ScoutTauntNoisemaker															// Noisemakers should have similar unarmed taunts to DM Fists, but maybe less aggressive
	{
		criteria ConceptPlayerTaunt IsScout ItemIsNoisemaker
		response ScoutTauntSecondary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-KnockbackWepKillScout
	{
		scene "scenes/Player/Scout/low/2645.vcd"	// you look like you ran through traffic!
		scene "scenes/player/Scout/low/2687.vcd"	// you're like a car crash...
	}
	Response NOWP-MediumGunKillScout														// Responses for medium-small size guns - basically kinda surprised you were dumb enough to die to that!
	{
		scene "scenes/Player/Scout/low/2649.vcd"	// I don't usually kill morons this fast
		scene "scenes/Player/Scout/low/2766.vcd"	// Is that all you got moron?
		scene "scenes/Player/Scout/low/2558.vcd"	// today ain't your day pancakes
		scene "scenes/Player/Scout/low/499.vcd"		// lotta good that gun didya
		scene "scenes/Player/Scout/low/496.vcd"		// yeah come get some ya frickin wuss
	}
	Response NOWP-BrickKillScout															// Brick Kill... Each class has their own response for it now
	{
		scene "scenes/Player/Scout/low/2686.vcd"	// Just caved in your skull, my...
		scene "scenes/player/Scout/low/2691.vcd"	// Hit the bricks...
		scene "scenes/player/Scout/low/2556.vcd"	// ...invent next time; ducking!
	}
	Response NOWP-FishKillExtraScout														// A few extra "humiliating" responses for the Holy Mackerel
	{
		scene "scenes/Player/Scout/low/2647.vcd"	// would you look at you?
		scene "scenes/Player/Scout/low/2645.vcd"	// look like you ran through traffic
		scene "scenes/player/Scout/low/2654.vcd"	// oh wha you gonna cry?
	}

	rule NOWP-SandmanSwingScout																// When swinging the Sandman, have a 10% chance to fire this.. I think every few swings?? 10s downtime
	{
		criteria ConceptFireWeapon IsScout WeaponIsSandman 10PercentChance
		ApplyContext "ScoutHitBallSpeech:1:10"
		Response PlayerStunBallHittingItScout
	}

	rule NOWP-ShortstopKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsShortstopPrimary KilledPlayerDelay 30PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response NOWP-MediumGunKillScout
	}
	rule NOWP-ForceANatureKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsFAN KilledPlayerDelay 30PercentChance ScoutNotKillSpeech	// The main weapon a class gets kills with starts at 30 base chance
		ApplyContext "ScoutKillSpeech:1:10"
		Response NOWP-KnockbackWepKillScout
	}
	rule NOWP-BFBSpeedBoostKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsPepBlaster KilledPlayerDelay 65PercentChance ScoutNotKillSpeech WeaponFunctionCooledDown	// If it has an important function, 65 base chance
		ApplyContext "ScoutKillSpeech:1:10"
		ApplyContext "SetWeaponDelayTime:1:20"
		Response InvulnerableSpeechScout													// Fires MOST of the time when getting a kill with the BFB, also has a longer cooldown
	}
	rule NOWP-LeverRifleManyKillsScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsLeverRifle KilledPlayerDelay IsManyRecentKills 30PercentChance ScoutNotKillSpeech WeaponFunctionCooledDown
		ApplyContext "ScoutKillSpeech:1:10"													// Trick, this tends to trigger if Scout's gotten a lot of kills recently, which implies he's been racking up extra clipsize with this by now.
		ApplyContext "SetWeaponDelayTime:1:20"
		Response InvulnerableSpeechScout
		Response InvulnerableSpeechScout
		Response NOWP-MediumGunKillScout
	}
	rule NOWP-BaseballGunKillScout															// If scoring a kill with the Baseball Gun, fire the Moonshot responses, then have 10s downtime
	{
		criteria ConceptKilledPlayer IsScout WeaponIsBaseballGun KilledPlayerDelay 30PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response PlayerStunBallHitScout
		Response NOWP-FishKillExtraScout
	}
	rule NOWP-SodaPopperKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsMakeshiftScatter KilledPlayerDelay 30PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response NOWP-MediumGunKillScout
	}
	rule NOWP-BrickLauncherKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsBrickLauncher KilledPlayerDelay 30PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response PlayerStunBallHitScout
		Response NOWP-BrickKillScout
	}
	rule NOWP-UltimateJumperKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsUltimateJumper KilledPlayerDelay 30PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response PlayerStunBallHitScout
		Response NOWP-BrickKillScout
	}
	rule NOWP-CSMGKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsMiami KilledPlayerDelay 45PercentChance ScoutNotKillSpeech	// Secondary class weapons have a 45 base chance to facilitate triggering more often
		ApplyContext "ScoutKillSpeech:1:10"
		Response NOWP-MediumGunKillScout
	}
	rule NOWP-BrickKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance ScoutNotKillSpeech	// Brick has an inflated response rate since funny
		ApplyContext "ScoutKillSpeech:1:10"
		Response NOWP-BrickKillScout
	}
	rule NOWP-CleaverKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsCleaver KilledPlayerDelay 45PercentChance ScoutNotKillSpeech
		ApplyContext "ScoutKillSpeech:1:10"
		Response KilledPlayerMeleeBasherScout
		Response PlayerStunBallHitScout
	}
	rule NOWP-SandmanKillScout																// If scoring a kill with the Sandman, fire the Moonshot responses, then have 10s downtime
	{
		criteria ConceptKilledPlayer IsScout WeaponIsSandman KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee	// Melees have a 50 base chance since you don't get kills with them super often (usually)
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response PlayerStunBallHitScout
	}
	rule NOWP-FishKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsFish KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeFishScout
		Response NOWP-FishKillExtraScout
	}
	rule NOWP-FanOWarKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsGunbaiFan KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeFishScout
	}
	rule NOWP-MaceKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsLavaMace KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeMaceScout
		Response KilledPlayerMeleeBasherScout
	}
	rule NOWP-C4BatKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsC4Bat KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		ApplyContext "IsDominating:1:5"														// Dominating context so this actually fires over pain sounds
		Response NOWP-MediumGunKillScout
		Response KilledPlayerMeleeBasherScout
	}
	Rule NOWP-C4BatJumpScout																// Copied from Live, this briefly replaces your severe pain noise if you get a kill!
	{
		criteria ConceptAttackerPain IsScout IsDoubleJumping WeaponIsC4Bat 30PercentChance CaberHealthContext KilledPlayerDelay IsCritical ScoutNotKillSpeechMelee
		Response PlayerDoubleJumpScout														// If you had 55+ health at the time!
		Response DoubleJumpScout															// Extra lines!
	}
	rule NOWP-SpyArmKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsHelpingHand KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeFishScout
		Response NOWP-FishKillExtraScout
	}
	Rule NOWP-CandyCaneKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsCandyCane KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeCandyScout
		Response KilledPlayerMeleeCandyScout
		Response KilledPlayerMeleeFishScout
	}

	rule NOWP-CrowbarKillScout																// Basher responses ("Man, you're skull's so soft.. -")
	{
		criteria ConceptKilledPlayer IsScout WeaponIsCrowbar KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeBasherScout
	}
	rule NOWP-PanKillScout																	// Fish responses ("Yeah I dare ya, rage-quit!")
	{
		criteria ConceptKilledPlayer IsScout WeaponIsPan KilledPlayerDelay 60PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeFishScout
	}
	rule NOWP-ObjectorKillScout																// Sun-On-A-Stick Responses ("Is-is anyone even..")
	{
		criteria ConceptKilledPlayer IsScout WeaponIsObjector KilledPlayerDelay 45PercentChance ScoutNotKillSpeechMelee
		ApplyContext "ScoutKillSpeechMelee:1:10"
		Response KilledPlayerMeleeMaceScout
	}

//	Rule NOWP-ScoutSwingC4Bat																// Say the invuln lines every now and again while swinging with the caber a-la Sentry Buster
//	{
//		criteria ConceptFireWeapon IsScout WeaponIsC4Bat 20PercentChance IsNotDaring ScoutNotKillSpeechMelee IsNotHeavyFistsSwinging
//		ApplyContext "HeavyFistsSwinging:1:15"
//		ApplyContext "IsDominating:1:5"														// Dominating context so this actually fires over pain sounds
//		Response InvulnerableSpeechScout
//	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-SmallEventKill
	{
		speak "Weapon_SmallEvent.SitcomLaugh"
	}
	Response NOWP-SpyCloakNoise
	{
		speak "Player.Spy_Cloak" noscene	// Spy cloaking noise. NEVER GIVE THIS A CAPTION EVER
	}
	Response NOWP-PlayerBeingShotInvincibleScoutShortened
	{
		scene "scenes/Player/Scout/low/2632.vcd"
		scene "scenes/Player/Scout/low/2635.vcd"
		scene "scenes/Player/Scout/low/2638.vcd"
		scene "scenes/Player/Scout/low/2690.vcd"
		scene "scenes/Player/Scout/low/2741.vcd"
		scene "scenes/Player/Scout/low/2751.vcd"
		scene "scenes/Player/Scout/low/2753.vcd"
		scene "scenes/Player/Scout/low/2755.vcd"
	}

	rule NOWP-DoubleJumpScout																// When Scout double-jumps, fires his weapon, and his weapon is the FAN, 20% chance to fire this response
	{
		criteria ConceptFireWeapon IsScout IsDoubleJumping WeaponIsFAN 20PercentChance
		Response PlayerDoubleJumpScout
	}
	rule NOWP-DoubleJumpScoutBlunderbuss
	{
		criteria ConceptFireWeapon IsScout IsDoubleJumping WeaponIsBlunderbussSct 20PercentChance
		Response PlayerDoubleJumpScout
	}
	rule NOWP-DamagedCriticalBFB															// When Scout takes damage below 80hp with the BFB equipped, fire this, with 15s downtime
	{
		criteria ConceptPain IsScout WeaponIsPepBlaster BonkHealthContext 40PercentChance ScoutNotDrinkReadySpeech
		ApplyContext "ScoutDrinkReadySpeech:1:10"
		Response DrinkNotReady
	}
	rule NOWP-DrinkNotReady																	// When Scout takes damage below 80hp with the Bonk equipped, fire this, with 10s downtime
	{
		criteria ConceptPain IsScout WeaponIsBonk BonkHealthContext ScoutNotDrinkReadySpeech
		ApplyContext "ScoutDrinkReadySpeech:1:10"
		Response DrinkNotReady
	}
	rule NOWP-DrinkNotReadyCritCola
	{
		criteria ConceptPain IsScout WeaponIsCritCola BonkHealthContext ScoutNotDrinkReadySpeech
		ApplyContext "ScoutDrinkReadySpeech:1:10"
		Response DrinkNotReady
	}
	Rule NOWP-GainDefBuffScoutBonk
	{
		criteria ConceptPlayerPositive IsScout WeaponIsBonk ScoutBuffTempCond				// This is sadly the cleanest way I can think of to check for this, I'm tired. When he taunts he adds a flag for a few seconds, if he uses Positive in that time, it's from the effect.
		Response NOWP-PlayerBeingShotInvincibleScoutShortened
	}

	Rule NOWP-DoubleJumpWingerScout															// Makes double-jump responses slightly more common with the Winger out
	{
		criteria ConceptDoubleJump IsScout IsDoubleJumping WeaponIsWinger ScoutNotDoubleJumpSpeech 10PercentChance
		ApplyContext "ScoutDoubleJumpSpeech:1:30"
		Response DoubleJumpScout
	}
	rule NOWP-FishEventKillScoutMackerel													// Every now and then, if you get a kill with the Holy Mackerel, play a laugh track!
	{
		criteria ConceptKilledPlayer IsScout WeaponIsFish 20PercentChance WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:16"
		Response NOWP-SmallEventKill
	}
	rule NOWP-SpyArmKillScout
	{
		criteria ConceptKilledPlayer IsScout WeaponIsHelpingHand							// SHOULD score lower than his Kill responses so only plays if he wasn't gonna say anything anyway
		Response NOWP-SpyCloakNoise
	}
	Rule NOWP-MeleeDareC4BatScout															// Fix since I forgot these didn't work anymore
	{
		criteria ConceptPlayerBattleCry IsScout WeaponIsC4Bat IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatScout
	}

//------------------------------------------------------------------------------------------------------------//
// Soldier
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsRocketJumper" 		"item_name" "TF_WEAPON_ROCKET_JUMPER" 			"required" weight 35
	criterion "WeaponIsOriginal" 			"item_name" "TF_WEAPON_ORIGINAL_RL" 			"required" weight 35
	criterion "WeaponIsCM5K" 				"item_name" "TF_WEAPON_COWMANGLER" 				"required" weight 35
	criterion "WeaponIsDirectRL" 			"item_name" "TF_WEAPON_DIRECTHIT" 				"required" weight 35
	criterion "WeaponIsSoldierSSG" 			"item_name" "TF_WEAPON_EXPLOSIVE_SSG" 			"required" weight 35

	criterion "WeaponIsRBison" 				"item_name" "TF_WEAPON_RAYGUN" 					"required" weight 35
	criterion "WeaponIsReserve" 			"item_name" "TF_WEAPON_RESERVE_SHOOTER" 		"required" weight 35
	criterion "WeaponIsMobShotgun" 			"item_name" "TF_WEAPON_MOB_SHOTGUN" 			"required" weight 35
	criterion "WeaponIsLMG" 				"item_name" "TF_WEAPON_LMG" 					"required" weight 35
	criterion "WeaponIsMusket" 				"item_name" "TF_WEAPON_BATTLERIFLE_FL" 			"required" weight 35
	criterion "WeaponIsFlintlockMulti" 		"item_name" "TF_WEAPON_FLINTLOCK_MULTI" 		"required" weight 35
	criterion "WeaponIsBucket" 				"item_name" "TF_WEAPON_BUCKET" 					"required" weight 35

	criterion "WeaponIsRidingCrop" 			"item_name" "TF_WEAPON_RIDING_CROP" 			"required" weight 35
	criterion "WeaponIsPickaxe" 			"item_name" "TF_WEAPON_EQUALIZER" 				"required" weight 35
	criterion "WeaponIsGardener" 			"item_name" "TF_WEAPON_MARKET_GARDENER" 		"required" weight 35
	criterion "WeaponIsNotGardener" 		"item_name" "!=TF_WEAPON_MARKET_GARDENER" 		"required" weight 35
	criterion "WeaponIsTWKatana" 			"item_name" "TF_WEAPON_KATANA" 					"required" weight 35
	criterion "WeaponIsNotTWKatana" 		"item_name" "!=TF_WEAPON_KATANA" 				"required" weight 35
	criterion "WeaponIsPainTrainStation" 	"item_name" "TF_WEAPON_PAINTRAIN" 				"required" weight 35
	criterion "WeaponIsCombatKnife" 		"item_name" "TF_WEAPON_COMBATKNIFE" 			"required" weight 35
	criterion "WeaponIsSGTPlushie" 			"item_name" "TF_WEAPON_SGT_PLUSHIE" 			"required" weight 35

	Criterion "FiredJumper" 				"FiredJumperRecently" "1" 						"required" weight 10
	Criterion "JumperKillCooldown" 			"JumperKillSemiRecently" "!=1" 					"required" weight 10
	Criterion "LoadoutIsNotMantreads_Alt" 	"loadout_slot_primary" "!=Mantreads" 			"required" weight 35	// This seems to care about TRUE loadout slot and not whatever internal swap bullshit classes like Demoman or Spy have going on...
	Criterion "LoadoutIsNotMantreads" 		"loadout_slot_secondary" "!=Mantreads" 			"required" weight 35
	Criterion "LoadoutIsBucket" 			"loadout_slot_secondary" "Bucket o' Nades" 		"required" weight 35
	Criterion "LoadoutIsNotBucket" 			"loadout_slot_secondary" "!=Bucket o' Nades" 	"required" weight 35
	Criterion "ShootingAtBucket" 			"TryShootAtBucket" "1" 							"required" weight 10
	Criterion "ThrewBucket" 				"ThrewBucketRecently" "1" 						"required" weight 10
	Criterion "LoadoutIsSGTPlushie" 		"loadout_slot_melee" "Sergeant Plushie" 		"required" weight 35

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "SoldierTauntCowMangler"														// Re-do the sound timing
	{
		scene "scenes/player/soldier/low/taunt08.vcd"
	}
	response "SoldierTauntRobot"
	{
		scene "scenes/player/soldier/low/taunt09.vcd"
	}
	response "SoldierTauntSecondary_Alt"													// Try adding the muzzleflash + shell eject if you can
	{
		scene "scenes/player/soldier/low/taunt04.vcd"
	}
	response "SoldierTauntPickaxe"															// No code for Taunt Kill, just visual
	{
		scene "scenes/player/soldier/low/taunt05.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-SoldierTauntDirectHit															// RPG taunt. Can also just rename this to "The R.P.G", but hey, custom response file, might as well.
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsDirectRL
		response SoldierTauntDirectHit
	}
	rule NOWP-SoldierTauntCowMangler														// Forced Primary taunt for the CM5K to avoid issues with using other item types
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsCM5K
		response SoldierTauntPrimary
	}
	rule NOWP-SoldierTauntSSG
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsSoldierSSG
		response SoldierTauntDirectHit
	}
	rule NOWP-SoldierTauntEqualizer															// Weapons that have a super unique taunt in Live get a different one, if nothing else!
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsPickaxe
		response SoldierTauntDirectHit
	}
	rule NOWP-SoldierTauntCombatKnife
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsCombatKnife
		response SoldierTauntDirectHit
	}
	rule NOWP-SoldierTauntSGTPlushie
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsSGTPlushie							// Hehe
		response SoldierTauntMelee
		response SoldierTauntSecondary
		response SoldierTauntSecondary
	}

	rule NOWP-SoldierTauntThrowable
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsThrowMIRV
		response SoldierTauntSecondary
	}
	rule NOWP-SoldierTauntFistsDM															// DM Fists taunt should be something a class can do with their bare hands, or no weapon!
	{
		criteria ConceptPlayerTaunt IsSoldier WeaponIsDMFists
		response SoldierTauntDirectHit
	}
	rule NOWP-SoldierTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsSoldier ItemIsNoisemaker
		response SoldierTauntSecondary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-AmericaJargonSoldier														// A collection of various america-related lines
	{
		scene "scenes/Player/Soldier/low/3483.vcd"	// Your white flag...
		scene "scenes/Player/Soldier/low/3433.vcd"	// America wins again
		scene "scenes/Player/Soldier/low/3485.vcd"	// bon voyage crouton
	}
	Response NOWP-SargeRamblesSoldier														// Talking down to other "recruits"
	{
		scene "scenes/Player/Soldier/low/3477.vcd"	// You're a disgrace to the uniform
		scene "scenes/Player/Soldier/low/3462.vcd"	// you are a coward and you've died like one
		scene "scenes/Player/Soldier/low/3450.vcd"	// less talk more fight!
	}
	Response NOWP-RunAwaySoldier															// Bullet related
	{
		scene "scenes/Player/Soldier/low/3450.vcd"	// you cannot run from me...
		scene "scenes/Player/Soldier/low/3451.vcd"	// my bullets run faster!
		scene "scenes/Player/Soldier/low/3463.vcd"	// next time you wanna kill a man...
		scene "scenes/Player/Soldier/low/1190.vcd"	// if you know what's good for ya
	}
	Response NOWP-BrickKillSoldier
	{
		scene "scenes/Player/Soldier/low/3455.vcd"	// Got anything funny to say...
		scene "scenes/Player/Soldier/low/3455.vcd"	// You were in a big fat hurry to die son
		scene "scenes/Player/Soldier/low/3445.vcd"	// all quiet on the western front
	}
	Response NOWP-ObjectorKillSoldier														// Mostly just Soldier domination vs. Soldier lines except without a few
	{
		scene "scenes/Player/Soldier/low/3473.vcd"
		scene "scenes/Player/Soldier/low/3474.vcd"	// Your are now a Conscientous Objector to...
		scene "scenes/Player/Soldier/low/3475.vcd"
		scene "scenes/Player/Soldier/low/3476.vcd"
	}

	rule NOWP-SSGKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsSoldierSSG KilledPlayerDelay 30PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-RunAwaySoldier
		Response NOWP-AmericaJargonSoldier
	}
	rule NOWP-BrickKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-BrickKillSoldier
	}
	rule NOWP-ReserveKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsReserve KilledPlayerDelay 45PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-SargeRamblesSoldier
		Response NOWP-AmericaJargonSoldier
	}
	rule NOWP-MobShotgunKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsMobShotgun KilledPlayerDelay 45PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-RunAwaySoldier
	}
	rule NOWP-MusketKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsMusket KilledPlayerDelay 45PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-AmericaJargonSoldier
	}
	rule NOWP-LMGKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsLMG KilledPlayerDelay 45PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-RunAwaySoldier
		Response NOWP-SargeRamblesSoldier
	}
	rule NOWP-FlintlockKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsFlintlockMulti KilledPlayerDelay 45PercentChance SoldierNotKillSpeech
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-AmericaJargonSoldier
	}
	rule NOWP-BucketKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsBucket KilledPlayerDelay 60PercentChance SoldierNotKillSpeech	// On the rare chance you get a kill with this before he switches away
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-SargeRamblesSoldier
		Response NOWP-BrickKillSoldier
	}
	rule NOWP-SoldierFiredPrimaryRecentlyAtBucket
	{
		criteria ConceptFireWeapon IsSoldier IsWeaponPrimary LoadoutIsBucket ThrewBucket	// If Soldier threw the bucket recently and is now shooting a primary, assume he's trying to shoot the Bucket
		ApplyContext "TryShootAtBucket:1:2"
		Response PlayerExpressionAttackSoldier
	}
	rule NOWP-BucketKillPrimarySoldier
	{
		criteria ConceptKilledPlayer IsSoldier IsWeaponPrimary LoadoutIsBucket KilledPlayerDelay 45PercentChance SoldierNotKillSpeech ShootingAtBucket	// If Soldier gets a kill on his Primary weapon, has the Bucket equipped, and has was firing at the bucket recently, trigger lines!
		ApplyContext "SoldierKillSpeech:1:10"
		Response NOWP-SargeRamblesSoldier
		Response NOWP-BrickKillSoldier
	}
	rule NOWP-GardenerKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsGardener KilledPlayerDelay 45PercentChance SoldierNotKillSpeechMelee
		ApplyContext "SoldierKillSpeechMelee:1:10"
		Response PlayerKilledDominatingSoldier
		Response NOWP-ObjectorKillSoldier
	}
	rule NOWP-RidingCropKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsRidingCrop KilledPlayerDelay 45PercentChance SoldierNotKillSpeechMelee
		ApplyContext "SoldierKillSpeechMelee:1:10"
		Response NOWP-SargeRamblesSoldier
	}
	rule NOWP-SGTPlushieKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsSGTPlushie KilledPlayerDelay 45PercentChance SoldierNotKillSpeechMelee
		ApplyContext "SoldierKillSpeechMelee:1:10"
		Response NOWP-BrickKillSoldier
		Response NOWP-ObjectorKillSoldier
	}

	rule NOWP-PanKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsPan KilledPlayerDelay 60PercentChance SoldierNotKillSpeechMelee
		ApplyContext "SoldierKillSpeechMelee:1:10"
		Response NOWP-SargeRamblesSoldier
		Response NOWP-BrickKillSoldier
	}
	rule NOWP-ObjectorKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsObjector KilledPlayerDelay 45PercentChance SoldierNotKillSpeechMelee
		ApplyContext "SoldierKillSpeechMelee:1:10"
		Response NOWP-ObjectorKillSoldier													// Funny to think this was never put together in Live
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-BigEventKill
	{
		speak "Weapon_BigEvent.KillCheers"
	}
	Response NOWP-RidingCropMoveSoldier                        								// Reused lines from Payload push responses
	{
		scene "scenes/Player/Soldier/low/7347.vcd"
		scene "scenes/Player/Soldier/low/7349.vcd"
		scene "scenes/Player/Soldier/low/7353.vcd"
		scene "scenes/Player/Soldier/low/7354.vcd"
		scene "scenes/Player/Soldier/low/7355.vcd"
		scene "scenes/Player/Soldier/low/7356.vcd"
		scene "scenes/Player/Soldier/low/7357.vcd"
	}
	Response NOWP-KilledPlayerAssistSoldierAlt
	{
		scene "scenes/Player/Soldier/low/1186.vcd"
		speak "Soldier.SpecialCompleted-AssistedKill02"
	}

//	rule NOWP-SoldierFiredPrimaryRecently													// If a Soldier is firing a primary weapon downwards, they're probably trying to Blast Jump, let's set a flag
//	{
//		criteria ConceptFireWeapon IsSoldier IsWeaponPrimary PlayerIsLookingDown NotBlastJumping
//		ApplyContext "BlastJumping:1:1"
//		Response PlayerExpressionAttackSoldier
//	}
//	Rule NOWP-SoldierBlastJumpDamage														// If they take severe damage in the one second they fired and were looking down, they probably just jumped!
//	{
//		criteria ConceptAttackerPain IsSoldier IsWeaponPrimary PlayerIsLookingDown ProbablyBlastJumping WeaponFunctionCooledDown 30PercentChance IsNotDominating
//		ApplyContext "SetWeaponDelayTime:1:5"												// Cooldown of 5s between each possible line, 30% chance each time anyway
//		Response PlayerBattleCrySoldier														// I need to test this more so there's less false activations / it works on Demoman too
//	}
	Rule NOWP-MeleeDareSSGSoldier															// Lets you play melee dare lines with the SSG...
	{
		criteria ConceptPlayerBattleCry IsSoldier WeaponIsSoldierSSG IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSoldier
	}
	Rule NOWP-SoldierSwingEqualizerMediumHP													// Funny responses for if he's swinging the Equalizer with low health!
	{
		criteria ConceptFireWeapon IsSoldier WeaponIsPickaxe 25PercentChance BonkHealthContext IsNotDaring SoldierNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:7"												// ~128 or less health
		Response MeleeDareCombatSoldier
	}
	Rule NOWP-SoldierSwingEqualizerLowHP													// -Should- work cumulatively with above to make the response rate pretty crazy
	{
		criteria ConceptFireWeapon IsSoldier WeaponIsPickaxe 30PercentChance LowHealthContext IsNotDaring SoldierNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:5"												// ~50 or less health
		Response MeleeDareCombatSoldier
	}
	Rule NOWP-PlayerBoostSoldier_1															// Since TF_WEAPON_UMBRELLA just fires the Go voice command, hook into it for the Disp. Action!
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnScout
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_2															// Unfortunately, duplicated 10+ times since haha, no crosshair_ally criterion exists!
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnSoldier
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_3
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnPyro
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_4
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnDemoman
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_5
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnHeavy
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_6
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnEngineer
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_7
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnMedic
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_8
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnSniper
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_9															// There's some weird behavior with disguised enemy Spies, but since it occurs with regular Melee Dares too, screw it
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnSpy
		Response NOWP-RidingCropMoveSoldier
	}
	Rule NOWP-PlayerBoostSoldier_10
	{
		criteria ConceptPlayerGo IsSoldier WeaponIsRidingCrop IsNotCrossHairEnemy IsOnCivilian
		Response NOWP-RidingCropMoveSoldier
	}

	rule NOWP-RocketJumperFiredRecentlyCheck												// Technically not really necessary since Soldier doesn't have many delay-fire weapons on Secondary, but covering my bases here!
	{
		criteria ConceptFireWeapon IsSoldier IsWeaponPrimary WeaponIsRocket WeaponIsRocketJumper
		ApplyContext "FiredJumperRecently:1:4"												// This is my predicted travel-time before it becomes increasingly unlikely this rocket will ever hit anyone
		Response PlayerExpressionAttackSoldier
	}
	rule NOWP-JumperEventKillSoldierRJ
	{
		criteria ConceptKilledPlayer IsSoldier IsWeaponPrimary WeaponIsRocket WeaponIsRocketJumper LoadoutIsNotMantreads LoadoutIsNotBucket 100PercentChance FiredJumper JumperKillCooldown	// This ALWAYS fires if you somehow get a kill with a Jumper! Also has some extra includes to make sure it only fires with the real deal
		ApplyContext "JumperKillSemiRecently:1:30"											// On the off chance this triggers, cd for 30s so this can't be spam triggered (like via exploit)
		Response NOWP-BigEventKill
	}

	Rule NOWP-KilledPlayerAssistSoldierAlt
	{
		criteria ConceptPlayerThanks IsSoldier IsARecentKill KilledPlayerDelay SoldierNotAssistSpeech LoadoutIsSGTPlushie	// If Sgt. Plushie is equipped, have a new line! This is regardless of whether or not he's active.
		ApplyContext "SoldierAssistSpeech:1:20"
		Response NOWP-KilledPlayerAssistSoldierAlt
	}

//------------------------------------//
// Weapon Speech
//------------------------------------//
	Response NOWP-SgtPlushieRambles
	{
		speak "SgtPlushie.AutoCappedControlPoint01"	// Now that is what I wanna see!
		speak "SgtPlushie.AutoCappedIntelligence02"	// And that is how you do it, men!
		speak "SgtPlushie.BattleCry01"	// Charge!
		speak "SgtPlushie.BattleCry02"	// Forward!
		speak "SgtPlushie.BattleCry03"	// Give 'em hell, boys!
		speak "SgtPlushie.BattleCry04"	// Last one alive, lock the door!
		speak "SgtPlushie.BattleCry05"	// Attaaack!
		speak "SgtPlushie.BattleCry06"	// Heh-heh-heeeh!
		speak "SgtPlushie.CloakedSpy03"	// Spy!
		speak "SgtPlushie.DominationMedic03"	// America wins again!
		speak "SgtPlushie.DominationScout04"	// Less talk, more fight!
		speak "SgtPlushie.DominationSpy07"	// Word cannot express how much I hate France right now!
		speak "SgtPlushie.DominationSpy08"	// Bon voyage, crouton!
		speak "SgtPlushie.Go01"	// Go-go-go, charge!
		speak "SgtPlushie.Go02"	// Move out!
		speak "SgtPlushie.Go03"	// Let's go!
		speak "SgtPlushie.HatOverHeartTaunt06"	// You were good son, real good - maybe even the best.
		speak "SgtPlushie.HeadLeft03"	// Leeeft house!
		speak "SgtPlushie.HeadRight01"	// Right face!
		speak "SgtPlushie.MoveUp01"	// Move up!
		speak "SgtPlushie.PickAxeTaunt04"	// C'mere, cupcake!
		speak "SgtPlushie.SpecialCompleted05"	// Yaaaaahh!
		speak "SgtPlushie.SpecialCompleted-AssistedKill02"	// We're a good team, maggot!
		speak "SgtPlushie.Taunts01"	// Maggots!
		speak "SgtPlushie.Taunts03"	// If ya know what's good for ya, you will run!
		speak "SgtPlushie.Taunts12"	// We have you surrounded - at least from this side!
	}
	Response NOWP-SgtPlushieKill
	{
		speak "SgtPlushie.AutoCappedControlPoint01"	// Now that is what I wanna see!
		speak "SgtPlushie.AutoCappedIntelligence02"	// And that is how you do it, men!
		speak "SgtPlushie.HatOverHeartTaunt01"	// You will not be missed.
		speak "SgtPlushie.HatOverHeartTaunt03"	// You were loud and ugly, and now you're dead, amen!
		speak "SgtPlushie.HatOverHeartTaunt04"	// You're dead, that's good, amen.
		speak "SgtPlushie.HatOverHeartTaunt05"	// Godspeed, you magnificent bastard.
		speak "SgtPlushie.SpecialCompleted05"	// Yaaaaahh!
		speak "SgtPlushie.Taunts07"	// If God had wanted you to live, he would not have created me!
		speak "SgtPlushie.Taunts09"	// Take your lumps like a man, Private Twinkletoes!
		speak "SgtPlushie.Taunts11"	// Each and every one of you will be sent home to your mama in a box!
		speak "SgtPlushie.Taunts17"	// This is my world. You are not welcome in my world!
	}
	Response NOWP-SgtPlushieCheers
	{
		speak "SgtPlushie.AutoCappedControlPoint01"	// Now that is what I wanna see!
		speak "SgtPlushie.AutoCappedIntelligence02"	// And that is how you do it, men!
		speak "SgtPlushie.BattleCry06"	// Heh-heh-heeeh!
		speak "SgtPlushie.DominationMedic03"	// America wins again!
		speak "SgtPlushie.HatOverHeartTaunt06"	// You were good son, real good - maybe even the best.
		speak "SgtPlushie.SpecialCompleted05"	// Yaaaaahh!
		speak "SgtPlushie.SpecialCompleted-AssistedKill02"	// We're a good team, maggot!
	}

// Not as many as Skullbuster yet, these are harder to make for. TO-DO: Expand this!!
	rule NOWP-SgtPlushieKillSoldier
	{
		criteria ConceptKilledPlayer IsSoldier WeaponIsSGTPlushie WeaponIsNotSpeaking KilledPlayerDelay 70PercentChance SoldierNotKillSpeech
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-SgtPlushieKill
		Response NOWP-SgtPlushieKill
		Response NOWP-SgtPlushieKill
		Response NOWP-SgtPlushieCheers
	}
	Rule NOWP-SgtPlushieCappedIntelligence
	{
		criteria ConceptPlayerCapturedIntelligence IsSoldier WeaponIsSGTPlushie WeaponIsNotSpeaking 50PercentChance
		ApplyContext "WeaponSpeaking:1:8"
		Response NOWP-SgtPlushieCheers
	}
	Rule NOWP-SgtPlushieCapturedPoint
	{
		criteria ConceptPlayerCapturedPoint IsSoldier WeaponIsSGTPlushie WeaponIsNotSpeaking 50PercentChance
		ApplyContext "WeaponSpeaking:1:8"
		Response NOWP-SgtPlushieCheers
	}
	Rule NOWP-PlayerSgtPlushieSpecialAttack
	{
		criteria ConceptTauntLaugh IsSoldier WeaponIsSGTPlushie WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:3"
		Response NOWP-SgtPlushieRambles
	}

//------------------------------------------------------------------------------------------------------------//
// Pyro
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsDragonsFury" 		"item_name" "TF_WEAPON_FIREBALL_LAUNCHER" 		"required" weight 35
	criterion "WeaponIsFireHose" 			"item_name" "TF_WEAPON_FIREHOSE" 				"required" weight 35
	criterion "WeaponIsChemThrower" 		"item_name" "TF_WEAPON_CHEMTHROWER" 			"required" weight 35
	criterion "WeaponIsMolotovLauncher" 	"item_name" "TF_WEAPON_MOLOTOV_LAUNCHER" 		"required" weight 35
	criterion "WeaponIsIncendiaryCannon" 	"item_name" "TF_WEAPON_INCENDIARYCANNON" 		"required" weight 35
	criterion "WeaponIsRainbowFlamer" 		"item_name" "TF_WEAPON_RAINBLOWER" 				"required" weight 35

	criterion "WeaponIsSpitfire" 			"item_name" "TF_WEAPON_SHOTGUN_INCENDIARY" 		"required" weight 35
	criterion "WeaponIsGasCan" 				"item_name" "TF_WEAPON_GASCAN" 					"required" weight 35
	criterion "WeaponIsNotGasCan" 			"item_name" "!=TF_WEAPON_GASCAN" 				"required" weight 35
	criterion "WeaponIsFirecannon" 			"item_name" "TF_WEAPON_ROCKET_FLAREGUN" 		"required" weight 35
	criterion "WeaponIsJetpackPyro" 		"item_name" "TF_WEAPON_JETPACK_PYRO" 			"required" weight 35
	criterion "WeaponIsNotJetpackPyro" 		"item_name" "!=TF_WEAPON_JETPACK_PYRO" 			"required" weight 35

	criterion "WeaponIsCarJack" 			"item_name" "TF_WEAPON_POWERJACK" 				"required" weight 35
	criterion "WeaponIsSledgehammer" 		"item_name" "TF_WEAPON_HOMEWRECKER" 			"required" weight 35
	criterion "WeaponIsAxtinguisher" 		"item_name" "TF_WEAPON_AXTINGUISHER" 			"required" weight 35
	criterion "WeaponIsNeonSign" 			"item_name" "TF_WEAPON_NEON_SIGN" 				"required" weight 35
	criterion "WeaponIsSlappers" 			"item_name" "TF_WEAPON_SLAPPERS" 				"required" weight 35
	criterion "WeaponIs3rdDegree" 			"item_name" "TF_WEAPON_THIRDDEGREE" 			"required" weight 35
	criterion "WeaponIsLavaAxe" 			"item_name" "TF_WEAPON_LAVA_AXE" 				"required" weight 35
	criterion "WeaponIsUkulele" 			"item_name" "TF_WEAPON_UKULELE" 				"required" weight 35
	criterion "WeaponIsNotUkulele" 			"item_name" "!=TF_WEAPON_UKULELE" 				"required" weight 35

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "PyroTauntRainblower"															// Does NOT hide weapon, a bit glitchy
	{
		scene "scenes/player/pyro/low/taunt_bubbles.vcd"
	}
	response "PyroTauntScorchShot"															// No code for Taunt Kill, also seems jittery and incomplete | Add some rustling, plus a basic firing sound or smth
	{
		scene "scenes/player/pyro/low/taunt_scorch_shot.vcd"
	}
	response "PyroTauntJetpack"																// This is broken entirely unless you also load TF2 Workshop taunt anims (more effort than I care to give)
	{
		scene "scenes/player/pyro/low/taunt_gasblast.vcd"
	}
	Response "PyroTauntThirdDegree"															// Supersede these two entirely if TF2C Team adds "sound_taunt" to Pyro's melee taunt - the same way Medic has it
	{
		scene "scenes/player/pyro/low/drg_axe_taunt.vcd"
	}
	Response "PyroTauntAnnihilator"
	{
		scene "scenes/player/pyro/low/annihilator_taunt.vcd"
	}
	response "PyroTauntLollichop"															// Maybe a soft whirl or rustle as they twirl the melee
	{
		scene "scenes/player/pyro/low/taunt_lollichop.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-PyroTauntMolotovLauncher
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsMolotovLauncher
		response PyroTauntPrimary
	}
	rule NOWP-PyroTauntFireHose
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsFireHose
		response PyroTauntHalloween
	}
	rule NOWP-PyroTauntIncendiaryCannon
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsIncendiaryCannon
		response PyroTauntHalloween															// Halloween taunt since no other really fits, not even Primary taunt...
	}
	rule NOWP-PyroTauntSlappers
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsSlappers
		response PyroTauntHalloween
	}

	rule NOWP-PyroTauntPan																	// Pan gets taunt kills for funnies (holdover until laugh taunt works)
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsPan
		response PyroTauntItem1
	}
	rule NOWP-PyroTauntThrowable
	{
		criteria ConceptPlayerTaunt IsPyro WeaponIsThrowMIRV
		response PyroTauntItem1
	}
	rule NOWP-PyroTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsPyro ItemIsNoisemaker
		response PyroTauntMelee
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-PyroShortLaugh															// Pyro has an extreme shortage of lines in general... to make up for that, supplanted some Live TF2 taunt lines
	{
		scene "scenes/Player/Pyro/low/1595.vcd"	// giggle
		speak "pyro_taunt_cong_fun_05"
		speak "pyro_taunt_dosi_fun_05"
		speak "pyro_taunt_flip_int_02"
	}
	Response NOWP-PyroMurderCasual
	{
		scene "scenes/Player/Pyro/low/1406.vcd"	// capped point!
		speak "cm_pyro_pregamewonlast_01"
		speak "pyro_taunt_dosi_end_06"
		speak "pyro_taunt_flip_int_02"
		speak "Pyro.HighFiveSuccess01"
	}
	Response NOWP-PyroJudgementalMumbles
	{
		scene "scenes/Player/Pyro/low/1531.vcd"	// defend the point!
		scene "scenes/Player/Pyro/low/1555.vcd"	// thanks for the teleport
		speak "cm_pyro_pregamelostlast_02"
		speak "cm_pyro_pregamelostlast_03"
		speak "pyro_trade_09"
	}
	Response NOWP-BrickKillPyro
	{
		scene "scenes/Player/Pyro/low/1409.vcd" // capped intel
		scene "scenes/Player/Pyro/low/1532.vcd"
		scene "scenes/Player/Pyro/low/1533.vcd"
		speak "cm_pyro_pregamelostlast_03"
		speak "Pyro.HighFiveSuccess03"
	}
	Response NOWP-MeleeRockNoisesPyro
	{
		speak "pyro_taunt_head_pain_21"	// rock noises
		speak "pyro_taunt_head_pain_22"	// rock noises
	}

	rule NOWP-FireHoseKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsFireHose KilledPlayerDelay 10PercentChance PyroNotKillSpeech	// These are REALLY common argh!!
		ApplyContext "PyroKillSpeech:1:10"
		Response NOWP-PyroJudgementalMumbles
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-ChemThrowerKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsChemThrower KilledPlayerDelay 10PercentChance PyroNotKillSpeech
		ApplyContext "PyroKillSpeech:1:10"
		Response NOWP-PyroMurderCasual
	}
	rule NOWP-SpitfireKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsSpitfire KilledPlayerDelay 45PercentChance PyroNotKillSpeech
		ApplyContext "PyroKillSpeech:1:10"
		Response NOWP-PyroMurderCasual
		Response NOWP-PyroJudgementalMumbles
	}
	rule NOWP-ReserveKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsReserve KilledPlayerDelay 45PercentChance PyroNotKillSpeech
		ApplyContext "PyroKillSpeech:1:10"
		Response NOWP-PyroMurderCasual
	}
	rule NOWP-BrickKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance PyroNotKillSpeech
		ApplyContext "PyroKillSpeech:1:10"
		Response NOWP-BrickKillPyro
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-PowerjackKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsCarJack KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroMurderCasual
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-HomewreckerKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsSledgehammer KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroJudgementalMumbles
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-AxtinguisherKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsAxtinguisher KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroMurderCasual
	}
	rule NOWP-NeonSignKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsNeonSign KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroJudgementalMumbles
		Response NOWP-MeleeRockNoisesPyro												// Melees that make a taunt sound in Live TF2 get special responses for kills!
	}
	rule NOWP-SlappersKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsSlappers KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroJudgementalMumbles
		Response NOWP-PyroShortLaugh
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-ThirdDegreeKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIs3rdDegree KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroMurderCasual
		Response NOWP-MeleeRockNoisesPyro
	}
	rule NOWP-LavaAxeKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsLavaAxe KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-PyroMurderCasual
		Response NOWP-PyroShortLaugh
	}
	rule NOWP-UkuleleKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsUkulele KilledPlayerDelay 45PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-MeleeRockNoisesPyro
		Response NOWP-PyroShortLaugh
	}

	rule NOWP-PanKillPyro
	{
		criteria ConceptKilledPlayer IsPyro WeaponIsPan KilledPlayerDelay 60PercentChance PyroNotKillSpeechMelee
		ApplyContext "PyroKillSpeechMelee:1:10"
		Response NOWP-BrickKillPyro
		Response NOWP-PyroShortLaugh
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-JetpackCalloutPyro														// Specific callouts when flying with the Jetpack!
	{
		scene "scenes/Player/Pyro/low/1403.vcd"
		scene "scenes/Player/Pyro/low/1418.vcd"
		scene "scenes/Player/Pyro/low/1421.vcd"
	}
	Response NOWP-PlayerKilledObjectHomewreckerPyro
	{
		scene "scenes/Player/Pyro/low/1406.vcd"	// capped point!
		scene "scenes/Player/Pyro/low/1532.vcd"
		scene "scenes/Player/Pyro/low/1533.vcd" 
		scene "scenes/Player/Pyro/low/1517.vcd"
	}

	rule NOWP-JetpackCalloutPyro															// No cooldown since it's pretty high-importance
	{
		criteria ConceptFireWeapon IsPyro WeaponIsThrowMIRV WeaponIsJetpackPyro
		Response NOWP-JetpackCalloutPyro
	}
	Rule NOWP-PlayerKilledObjectHomewreckerPyro												// This MIGHT work on sappers, but I'm not really sure. Works on buildings!
	{
		criteria ConceptKilledObject IsPyro WeaponIsSledgehammer 40PercentChance
		ApplyContext "PyroKillSpeechObject:1:5"
		Response NOWP-PlayerKilledObjectHomewreckerPyro
	}

//------------------------------------------------------------------------------------------------------------//
// Demoman
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsBrimstoneNOWP" 		"item_name" "TF_WEAPON_GRENADELAUNCHER_DM" 		"required" weight 35
	criterion "WeaponIsOriginalGL" 			"item_name" "TF_WEAPON_ORIGINAL_GL" 			"required" weight 35
	criterion "WeaponIsCyclops" 			"item_name" "The Cyclops" 						"required" weight 35
	criterion "WeaponIsGrenadeJumper" 		"item_name" "TF_WEAPON_GRENADE_JUMPER" 			"required" weight 35
	criterion "WeaponIsNotGrenadeJumper" 	"item_name" "!=TF_WEAPON_GRENADE_JUMPER" 		"required" weight 35
	criterion "WeaponIsDemoCannon" 			"item_name" "TF_WEAPON_LOOSECANNON" 			"required" weight 35

	criterion "WeaponIsStickyJumper" 		"item_name" "TF_WEAPON_STICKY_JUMPER" 			"required" weight 35
	criterion "WeaponIsFlechette" 			"item_name" "TF_WEAPON_FLECHETTE_GUN" 			"required" weight 35
	criterion "WeaponIsBowlingBallGun" 		"item_name" "TF_WEAPON_BOWLINGBALL" 			"required" weight 35
	criterion "WeaponIsStickyRoller" 		"item_name" "TF_WEAPON_STICKYROLLER" 			"required" weight 35

	criterion "WeaponIsEyelander" 			"item_name" "TF_WEAPON_CLAYMORE" 				"required" weight 35
	criterion "WeaponIsNotEyelander" 		"item_name" "!=TF_WEAPON_CLAYMORE" 				"required" weight 35
	criterion "WeaponIsScotch" 				"item_name" "TF_WEAPON_BOTTLE_RUM" 				"required" weight 35
	criterion "WeaponIsGolfClub" 			"item_name" "TF_WEAPON_GOLF_CLUB" 				"required" weight 35
	criterion "WeaponIsNotGolfClub" 		"item_name" "!=TF_WEAPON_GOLF_CLUB" 			"required" weight 35
	criterion "WeaponIsCaberMaybe" 			"item_name" "TF_WEAPON_CABER" 					"required" weight 75
	criterion "WeaponIsBattleAxe" 			"item_name" "TF_WEAPON_BATTLEAXE" 				"required" weight 35
	criterion "WeaponIsGauntletDemo" 		"item_name" "TF_WEAPON_GAUNTLET_DEMO" 			"required" weight 75
	criterion "WeaponIsHeadtaker" 			"item_name" "TF_WEAPON_HEADTAKER" 				"required" weight 50

	criterion "DemomanNotIdleDrunk" 		"DemomanIdleDrunk" "!=1" 						"required" weight 75
	Criterion "LoadoutIsNotTideTurner" 		"loadout_slot_secondary" "!=Tide-Turner" 		"required" weight 35
	Criterion "LoadoutIsIronCladShield" 	"loadout_slot_secondary" "Inverness Ironclad" 	"required" weight 35
	criterion "DemomanNotDefBuffSpeech" 	"DemomanDefBuff" "!=1" 							"required" weight 75

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "DemomanTauntSword"															// Soft metal wipe sound as he wipes the blade
	{
		scene "scenes/player/demoman/low/taunt09.vcd"
	}
	response "DemomanTauntCaber"															// Change the lines?
	{
		scene "scenes/player/demoman/low/taunt04_v1.vcd" 									// Don't fret boyo - I'll be gentle!
		scene "scenes/player/demoman/low/taunt04_v2.vcd" 									// In your language: 'Eat lead', laddies!
	}
	response "DemomanTauntWoohoo"															// No taunt prop but you could try to get creative with it
	{
		scene "scenes/player/demoman/low/woohoo.vcd"
	}
	response "DemomanTauntWolfHowl"
	{
		scene "scenes/player/demoman/low/taunt11.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-DemomanTauntCannon
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsDemoCannon
		response DemomanTauntSecondary
	}
	rule NOWP-DemomanTauntFlechette
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsFlechette
		response DemomanTauntPrimary
	}
	rule NOWP-DemomanTauntStickyRoller
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsStickyRoller
		response DemomanTauntMineLayer
	}
	rule NOWP-DemomanTauntCaber																// For Caber, just do the Bottle taunt... 5/6 of the time. Heh.
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsCaberMaybe
		response DemomanTauntMelee
		response DemomanTauntMelee
		response DemomanTauntMelee
		response DemomanTauntMelee
		response DemomanTauntMelee
		response DemomanTauntMirv
	}
	rule NOWP-DemomanTauntDemoClub															// For Kukri-type melees that also aren't the Frying Pan or DM Fists, use the GL's taunt
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsClub WeaponIsNotPan WeaponIsNotDMFists
		response DemomanTauntSecondary
	}
	rule NOWP-DemomanTauntDemoBeacon														// Same but for Beacon / Decap weapons
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsBeacon WeaponIsNotCubemapper			// "Club": Crowbar, Objector, GolfClub, Gardener
		response DemomanTauntSecondary														// "Decap": Eyelander, Skullcutter, Gauntlet, Katana, HHHH
	}																						// "Other": Pan, Handshake, DMFist, Caber
	rule NOWP-DemomanTauntDemoFireAxe
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsAxe WeaponIsNotCubemapper				// Cubemapper fix since Demoman has so many annoying issues with taunt priority
		response DemomanTauntSecondary
	}
	rule NOWP-DemomanTauntGauntlet
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsGauntletDemo
		response DemomanTauntHalloween
	}

	rule NOWP-DemomanTauntThrowable															// Excludes the MIRV
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsThrowMIRV WeaponIsNotMIRV
		response DemomanTauntHalloween
	}
	rule NOWP-DemomanTauntBowlingBall
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsBowlingBallGun
		response DemomanTauntHalloween
	}
	rule NOWP-DemomanTauntThrowableBrick													// Blow yourself up, idiot
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsThrowMIRV WeaponIsBrickNOWP
		response DemomanTauntMirv
	}
	rule NOWP-DemomanTauntFistsDM
	{
		criteria ConceptPlayerTaunt IsDemoman WeaponIsDMFists
		response DemomanTauntPrimary
	}
	rule NOWP-DemomanTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsDemoman ItemIsNoisemaker
		response DemomanTauntPrimary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-DemomanJudgementalLines
	{
		scene "scenes/Player/Demoman/low/3544.vcd"	// grow some hair on your face, then...
		scene "scenes/Player/Demoman/low/3549.vcd"	// lads like you that give war a bad name!
		scene "scenes/Player/Demoman/low/3563.vcd"	// didn't scare ye with my face-to-face man-fightin
		scene "scenes/Player/Demoman/low/1005.vcd"	// had me good eye on you
	}
	Response NOWP-GolfClubKillDemoman														// Some new responses for killing someone with the Golf Club
	{
		scene "scenes/Player/Demoman/low/866.vcd"	// ayehthat's the way ya do it!
		scene "scenes/Player/Demoman/low/868.vcd"	// time to get bluttered!
		scene "scenes/Player/Demoman/low/1004.vcd"	// let that be a bloody lesson to ya
		scene "scenes/Player/Demoman/low/1002.vcd"	// next time you bloody ask
	}
	Response NOWP-GauntletKillDemoman
	{
		scene "scenes/Player/Demoman/low/3515.vcd"	// thousand year reign of blood!
		scene "scenes/Player/Demoman/low/3536.vcd"	// tell the devil im comin for him next!`
		scene "scenes/Player/Demoman/low/1379.vcd"	// evil laugh 3
		scene "scenes/Player/Demoman/low/1383.vcd"	// short laugh 5
	}
	Response NOWP-BrickKillDemoman
	{
		scene "scenes/Player/Demoman/low/3524.vcd"	// if you were huntin trouble...
		scene "scenes/Player/Demoman/low/3551.vcd"	// ill notify your next of kin that you SUCKED
		scene "scenes/Player/Demoman/low/3554.vcd"	// lotta good that soldier training didya...
	}

	Rule NOWP-DemoCannonKillDemomanMany														// Approx. restores kill responses when using Loose Cannon
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsDemoCannon KilledPlayerDelay 30PercentChance DemomanNotKillSpeech IsManyRecentKills
		ApplyContext "DemomanKillSpeech:1:10"
		Response KilledPlayerManyDemoman
	}
	Rule NOWP-DemoCannonKillDemomanVeryMany
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsDemoCannon KilledPlayerDelay 50PercentChance DemomanNotKillSpeech IsVeryManyRecentKills
		ApplyContext "DemomanKillSpeech:1:10"
		Response KilledPlayerVeryManyDemoman
		Response NOWP-GolfClubKillDemoman
	}
	rule NOWP-FlechetteGunKillDemoman														// Restores kill responses and makes them more common since Flechette Launcher is a bit jank to get kills with
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsFlechette KilledPlayerDelay 45PercentChance DemomanNotKillSpeech
		ApplyContext "DemomanKillSpeech:1:10"
		Response KilledPlayerManyDemoman
	}
	rule NOWP-BowlingBallKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsBowlingBallGun KilledPlayerDelay 45PercentChance DemomanNotKillSpeech
		ApplyContext "DemomanKillSpeech:1:10"
		Response NOWP-GolfClubKillDemoman
		Response NOWP-BrickKillDemoman
	}
	rule NOWP-BrickKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance DemomanNotKillSpeech
		ApplyContext "DemomanKillSpeech:1:10"
		Response NOWP-BrickKillDemoman
	}
///
	rule NOWP-ClubKillDemoman																// Responses for kukri-type kills. For Demo, that's most not very sharp weapons, drunken speech. Excludes Golf Club
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerPanDemoman
	}
	rule NOWP-BeaconKillDemoman																// Responses for beacon-type kills. Implied to be very sharp, so use Sword responses.
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsBeacon WeaponIsNotCubemapper KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSwordDemoman
	}
	rule NOWP-FireAxeKillDemoman															// Responses for axe-type kills. Implied to be very sharp, so use Sword responses.
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsAxe KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSwordDemoman
	}
//
	rule NOWP-EyelanderKill2Demoman															// If Demoman kills another Demoman with the Eyelander, fire a response!
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsAxe WeaponIsEyelander KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee IsVictimDemoman
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSword2Demoman
	}
	rule NOWP-GauntletKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsAxe WeaponIsGauntletDemo KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSword2Demoman
		Response NOWP-GauntletKillDemoman
	}
	rule NOWP-KatanaKillDemomanVsDemo														// If Demoman kills either another Demoman or Soldier with a Katana, have a chance of firing the response
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsAxe WeaponIsTWKatana KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee IsVictimDemoman
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSword2Demoman
	}
	rule NOWP-KatanaKillDemomanVsSoldier
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsAxe WeaponIsTWKatana KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee IsVictimSoldier
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerSword2Demoman
	}
	rule NOWP-GolfClubKillDemoman															// Lines to imply Demoman is very enthusiastic about player golfing
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub WeaponIsGolfClub KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response NOWP-GolfClubKillDemoman
	}
	rule NOWP-CaberKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsCaberMaybe KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		ApplyContext "IsDominating:1:5"														// Dominating context so this actually fires over pain sounds
		Response KilledPlayerCaberDemoman
	}
	Rule NOWP-KilledPlayerCaberDemoman														// Copied from Live, this briefly replaces your severe pain noise if you get a kill!
	{
		criteria ConceptAttackerPain IsDemoman WeaponIsCaberMaybe CaberHealthContext KilledPlayerDelay IsCritical DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"											// If you had 75+ health at the time!
		Response KilledPlayerCaberDemoman
	}
	rule NOWP-GardenerKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub WeaponIsGardener KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response PlayerKilledDominatingDemoman
		Response NOWP-DemomanJudgementalLines
	}
	rule NOWP-PainTrainKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub WeaponIsPainTrainStation KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response KilledPlayerClubDemoman
	}
	rule NOWP-HHHHKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsBeacon WeaponIsNotCubemapper WeaponIsHeadtaker KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response NOWP-GauntletKillDemoman
	}

	rule NOWP-PanKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub WeaponIsPan KilledPlayerDelay 60PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response NOWP-BrickKillDemoman
	}
	rule NOWP-ObjectorKillDemoman
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsClub WeaponIsObjector KilledPlayerDelay 45PercentChance DemomanNotKillSpeechMelee
		ApplyContext "DemomanKillSpeechMelee:1:10"
		Response NOWP-BrickKillDemoman
	}

	Rule NOWP-DemomanSwingCaber																// Say the invuln lines every now and again while swinging with the caber a-la Sentry Buster
	{
		criteria ConceptFireWeapon IsDemoman WeaponIsCaberMaybe 20PercentChance IsNotDaring DemomanNotKillSpeechMelee IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:15"
		ApplyContext "IsDominating:1:5"														// Dominating context so this actually fires over pain sounds		
		Response InvulnerableSpeechDemoman
		Response InvulnerableSpeechDemoman2
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-DemomanDefBuffScream
	{
		scene "scenes/Player/Demoman/low/910.vcd"
		scene "scenes/Player/Demoman/low/950.vcd"
		scene "scenes/Player/Demoman/low/1379.vcd"
	}

	Rule NOWP-MeleeDareCaberDemoman															// Fix since I forgot these didn't work anymore
	{
		criteria ConceptPlayerBattleCry IsDemoman WeaponIsCaberMaybe IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response InvulnerableSpeechDemoman
		Response InvulnerableSpeechDemoman2
	}
	Rule NOWP-GainDefBuffDemomanIronclad
	{
		criteria ConceptPlayerPositive IsDemoman LoadoutIsIronCladShield DemomanNotDefBuffSpeech	// There's not really another way for me to check if a charge is happening...
		ApplyContext "DemomanDefBuff:1:12"													// In any case, sets this flag for 12s so Demoman can only really "use" that voice line once every 12s
		Response NOWP-DemomanDefBuffScream
	}

	rule NOWP-GrenadeJumperFiredRecentlyCheck												// Temporary stopgap to make normal SBL trigger this less often
	{
		criteria ConceptFireWeapon IsDemoman IsWeaponSecondary WeaponIsGrenade WeaponIsGrenadeJumper // Triple-redundant check to make sure he actually has a secondary grenade launcher named the Grenade Jumper
		ApplyContext "FiredJumperRecently:1:3"												// Being generous, if he got a kill with the GJ he would have fired it at least once within the last 3 seconds (aka almost immediately after)
		Response PlayerExpressionAttackDemoman
	}
	rule NOWP-StickyJumperFiredRecentlyCheck												// Quick hotfix for the Sticky Jumper also triggering it by accident sometimes with stock grenade launchers
	{
		criteria ConceptFireWeapon IsDemoman IsWeaponPrimary WeaponIsPipebomb WeaponIsStickyJumper
		ApplyContext "FiredJumperRecently:1:6"												// I can't really predict when Demoman would detonate the SJ bombs to kill someone, but I assume since it only does 1 damage each he'd also have fired it recently
		Response PlayerExpressionAttackDemoman
	}

	rule NOWP-JumperEventKillDemomanGJ
	{
		criteria ConceptKilledPlayer IsDemoman IsWeaponSecondary WeaponIsGrenade WeaponIsGrenadeJumper WeaponIsNotPipebomb LoadoutIsNotTideTurner 100PercentChance FiredJumper JumperKillCooldown	// THIS TRIGGERS WITH SBL KILLS TOO. I'm not 100% sure how to circumvent that
		ApplyContext "JumperKillSemiRecently:1:30"
		Response NOWP-BigEventKill
	}
	rule NOWP-JumperEventKillDemomanSJ
	{
		criteria ConceptKilledPlayer IsDemoman IsWeaponPrimary WeaponIsPipebomb WeaponIsStickyJumper LoadoutIsNotMantreads_Alt 100PercentChance FiredJumper JumperKillCooldown	// Be careful not to mix up syntax between SBL (primary, pipebomb) and GL (secondary, grenade)!
		ApplyContext "JumperKillSemiRecently:1:30"
		Response NOWP-BigEventKill
	}

//------------------------------------//
// Weapon Speech
//------------------------------------//
	Response NOWP-PlayerSwordHit
	{
		speak "Sword.Hit01"
		speak "Sword.Hit02"
		speak "Sword.Hit03"
		speak "Sword.Hit04"
		speak "Sword.Hit05"
		speak "Sword.Hit06"
		speak "Sword.Hit07"
		speak "Sword.Hit08"
		speak "Sword.Hit09"
		speak "Sword.Hit10"
	}
	Response NOWP-PlayerSwordIdle
	{
		speak "Sword.Idle01"
		speak "Sword.Idle02"
		speak "Sword.Idle03"
		speak "Sword.Idle04"
		speak "Sword.Idle05"
		speak "Sword.Idle06"
		speak "Sword.Idle07"
		speak "Sword.Idle08"
		speak "Sword.Idle09"
		speak "Sword.Idle10"
		speak "Sword.Idle11"
		speak "Sword.Idle12"
		speak "Sword.Idle13"
		speak "Sword.Idle14"
		speak "Sword.Idle15"
	}
	Response NOWP-PlayerGauntletScream
	{
		speak "Gauntlet.IdleScream"
	}
	Response NOWP-PlayerGauntletNoise
	{
		speak "Gauntlet.IdleNoise"
	}
	Response NOWP-PlayerHeadtakerAttack
	{
		speak "Knight.Attack01"
		speak "Knight.Attack02"
		speak "Knight.Attack03"
		speak "Knight.Attack04"
	}
	Response NOWP-PlayerHeadtakerLaugh
	{
		speak "Knight.Laugh01"
		speak "Knight.Laugh02"
		speak "Knight.Laugh03"
		speak "Knight.Laugh04"
	}
	Response NOWP-PlayerGolfClubHitSpecial
	{
		speak "Weapon_GolfClub.HitSpecial"
	}

	Rule NOWP-PlayerSwordSpecialAttack													// Turns out that speak doesn't play for player expression or weapon fire. Darn. Well, can always offload these lines to somethin else.
	{
		criteria ConceptTauntLaugh IsDemoman WeaponIsEyelander IsNotCrossHairEnemy WeaponIsNotSpeaking // Lotsa conditionals. If the weapon is the Eyelander, not looking at an enemy, and isn't on cooldown, then say something! Probably.
		ApplyContext "WeaponSpeaking:1:3"												// At least 5s between each
		Response NOWP-PlayerSwordIdle
	}
	Rule NOWP-PlayerGauntletSpecialAttack
	{
		criteria ConceptTauntLaugh IsDemoman WeaponIsGauntletDemo IsNotCrossHairEnemy WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:3"
		Response NOWP-PlayerGauntletScream
		Response NOWP-PlayerGauntletNoise
	}
	Rule NOWP-PlayerHeadtakerSpecialAttack
	{
		criteria ConceptTauntLaugh IsDemoman WeaponIsHeadtaker IsNotCrossHairEnemy WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:3"
		Response NOWP-PlayerHeadtakerLaugh
	}
	rule NOWP-GolfClubSpecialKillDemoman												// CROWD CHEERING! Very rarely when Demoman gets a golf-club kill, this plays. Not affected by any of his other speech modifiers so this can just play whenever!
	{
		criteria ConceptKilledPlayer IsDemoman WeaponIsGolfClub 15PercentChance
		Response NOWP-PlayerGolfClubHitSpecial
	}

//------------------------------------------------------------------------------------------------------------//
// Heavy
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsAAgunNOWP" 			"item_name" "TF_WEAPON_AA_GUN_NOWP" 			"required" weight 35
	criterion "WeaponIsHMG" 				"item_name" "TF_WEAPON_MACHINEGUN" 				"required" weight 35
	criterion "WeaponIsChainsaw" 			"item_name" "TF_WEAPON_CHAINSAW" 				"required" weight 35
	criterion "WeaponIsAA12" 				"item_name" "TF_WEAPON_AA12_REPEATER" 			"required" weight 35
	criterion "WeaponIsSuperNailgun" 		"item_name" "TF_WEAPON_SUPERNAILGUN" 			"required" weight 35
	criterion "WeaponIsBrassBeast" 			"item_name" "TF_WEAPON_GATLING" 				"required" weight 35
	criterion "WeaponIsTomislavMini" 		"item_name" "TF_WEAPON_TOMISLAV" 				"required" weight 35

	criterion "WeaponIsFamilyBiz" 			"item_name" "TF_WEAPON_FAMILY_BUSINESS" 		"required" weight 35
	criterion "WeaponIsChocoBar" 			"item_name" "TF_WEAPON_DALOKOHS" 				"required" weight 75
	criterion "WeaponIsBombShot" 			"item_name" "TF_WEAPON_IRONSIDE" 				"required" weight 35

	criterion "WeaponIsKGB" 				"item_name" "TF_WEAPON_BOXING_GLOVES" 			"required" weight 35
	criterion "WeaponIsGRU" 				"item_name" "TF_WEAPON_BOXING_GLOVES_URGENT" 	"required" weight 35
	criterion "WeaponIsPipe" 				"item_name" "TF_WEAPON_LEAD_PIPE" 				"required" weight 35
	criterion "WeaponIsBrassKnux" 			"item_name" "TF_WEAPON_BRASS_KNUCKLES" 			"required" weight 35
	criterion "WeaponIsSteelFists" 			"item_name" "TF_WEAPON_FISTSOFSTEEL" 			"required" weight 35
	criterion "WeaponIsBearGlove" 			"item_name" "TF_WEAPON_BEARGLOVES" 				"required" weight 35
	criterion "WeaponIsPunchOMatic" 		"item_name" "TF_WEAPON_PUNCHOMATIC" 			"required" weight 35

	Criterion "HeavyIsNotInPain" 			"HeavyAteBrick" "!=1" 							"required" weight 10
	Criterion "HeavyIsInPain" 				"HeavyAteBrick" "1" 							"required" weight 10

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "HeavyTauntFrankenHeavy"
	{
		scene "scenes/player/heavy/low/taunt07_halloween.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	Response NOWP-AteChocoHeavy
	{
		scene "scenes/Player/Heavy/low/SandwichTaunt01.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt02.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt14.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt17.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/2066.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/2260.vcd" predelay "1.0" 
	}
	Response NOWP-AteSteakHeavy
	{
		scene "scenes/Player/Heavy/low/SandwichTaunt01.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt02.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt14.vcd" predelay "1.0" 
		scene "scenes/Player/Heavy/low/SandwichTaunt17.vcd" predelay "1.0" 
	}
	Response NOWP-AteBrickHeavy																// I've been putting this off out of laziness, so here. This is JUST for predelays and maybe finer control over lines, IDK
	{
 // AttackerPain (x3)
		scene "scenes/Player/Heavy/low/297.vcd" predelay "3.0"								// Shorter predelays since they're pain sounds, implying Heavy had no time to think of words and is just in AGONY
		scene "scenes/Player/Heavy/low/298.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/299.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/297.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/298.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/299.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/297.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/298.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/299.vcd" predelay "3.0"
// Negative (x2)
		scene "scenes/Player/Heavy/low/1267.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/283.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/284.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/285.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/286.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/287.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/1267.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/283.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/284.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/285.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/286.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/287.vcd" predelay "3.0"
// Jeers
		scene "scenes/Player/Heavy/low/258.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/259.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/260.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/261.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/262.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/263.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/264.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/265.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/266.vcd" predelay "3.0"
// Medic!
		scene "scenes/Player/Heavy/low/274.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/275.vcd" predelay "3.0"
		scene "scenes/Player/Heavy/low/276.vcd" predelay "3.0"
	}

	rule NOWP-HeavyTauntAAGunType
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsAAGunType WeaponIsNotAAGun
//		response HeavyTauntAAGun
		response HeavyTauntPrimary
	}
	rule NOWP-HeavyTauntHMG
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsHMG
		response HeavyTauntSecondary
	}
	rule NOWP-HeavyTauntAA12
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsAA12
		response HeavyTauntSecondary
	}
	rule NOWP-HeavyTauntLunchboxGeneric														// When Heavy taunts with any NOT-SANDVICH lunchbox, do the eat taunt! Might be multiply defined elsewhere but whatever
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsLunchbox WeaponIsNotSandvich
		response HeavyTauntPlayerItem1
	}
	Rule NOWP-AteGenericHeavy																// If no conditions are true and it's just not a Sandvich, just fire the Dalokohs lines (no sandvich + "meats" lines)
	{
		criteria ConceptAteFood IsHeavy WeaponIsLunchbox WeaponIsNotSandvich 
		Response NOWP-AteChocoHeavy
	}
	Rule NOWP-AteChocoHeavy																	// Ditto, but for Dalokohs specifically
	{
		criteria ConceptAteFood IsHeavy WeaponIsChocoBar
		Response NOWP-AteChocoHeavy
	}
	Rule NOWP-AteSteakHeavy																	// If the Lunchbox forces him to melee, then it's the Buffalo Steak, so play meat lines (but no sandvich ones)
	{
		criteria ConceptAteFood IsHeavy IsWeaponMelee
		Response NOWP-AteSteakHeavy
	}
	rule NOWP-HeavyTauntPipe																// Due to how non-glove melees are set up on bip_hand_r, this taunt looks good!
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsPipe
		response HeavyTauntSecondary
	}
	rule NOWP-HeavyTauntKGB																	// Manual copy for ALL of Heavy's gloves since they almost all have different item types / labels
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsKGB
		response HeavyTauntKGB
	}
	rule NOWP-HeavyTauntGRU
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsGRU
		response HeavyTauntKGB
	}
	rule NOWP-HeavyTauntBrassKnux
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsBrassKnux
		response HeavyTauntKGB
	}
	rule NOWP-HeavyTauntFistsofSteel
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsSteelFists
		response HeavyTauntKGB
	}
	rule NOWP-HeavyTauntBearGlove
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsBearGlove
		response HeavyTauntKGB
//		response HeavyTauntFrankenHeavy														// If I get the chance this is getting switched to FrankenHeavy taunt
	}

	rule NOWP-HeavyTauntCrowbar
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsCrowbar 								// Pan left out intentionally so it defaults to Heavy's taunt-kill
		response HeavyTauntSecondary
	}
	rule NOWP-HeavyTauntObjector
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsObjector
		response HeavyTauntSecondary
	}

	rule NOWP-HeavyTauntThrowable
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsThrowMIRV WeaponIsNotBrickNOWP
		response HeavyTauntMelee
	}
	rule NOWP-HeavyTauntThrowableBrick														// The Brick isn't technically a lunchbox, buuuuttt force the taunt anyway, and then apply Brick eat context for 5s
	{
		criteria ConceptPlayerTaunt IsHeavy WeaponIsThrowMIRV WeaponIsBrickNOWP
		ApplyContext "HeavyAteBrick:1:5"
		response HeavyTauntPlayerItem1
	}
	rule NOWP-AteBrickHeavy																	// ...Ow? Fires as soon as he finishes eating, now includes predelays since I got off my lazy arse to do that
	{
		criteria ConceptPlayerExpression HeavyIsInPain IsHeavy WeaponIsBrickNOWP 100PercentChance // Technically this is actually briefly replacing his "idle expression" - all classes have one that loops and uses .vcds!
		Response NOWP-AteBrickHeavy
//		Response PlayerAttackerPainHeavy
//		Response PlayerAttackerPainHeavy
//		Response PlayerAttackerPainHeavy
//		Response PlayerNegativeHeavy
//		Response PlayerNegativeHeavy
//		Response PlayerJeersHeavy
//		Response PlayerMedicHeavy
	}
	rule NOWP-HeavyTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsHeavy ItemIsNoisemaker
		response HeavyTauntMelee
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-HeavyTimeFiringChainsawShort												// New lines for when Heavy is attacking with the Chainsaw
	{
		scene "scenes/player/heavy/low/269.vcd"
		scene "scenes/player/heavy/low/2080.vcd"
	}
	Response NOWP-HeavyTimeFiringChainsawLong
	{
		scene "scenes/Player/Heavy/low/2075.vcd"
		scene "scenes/player/heavy/low/2077.vcd"
	}
	Response NOWP-HeavyTimeFiringChainsawReallyLong
	{
		scene "scenes/player/heavy/low/319.vcd"
		scene "scenes/player/heavy/low/326.vcd"
		scene "scenes/player/heavy/low/2084.vcd"
	}
	Response NOWP-HeavyJudgementalLines
	{
		scene "scenes/Player/Heavy/low/1976.vcd"	// your guns are for babies!
		scene "scenes/Player/Heavy/low/339.vcd"	// you are going to need much bigger guns!
		scene "scenes/Player/Heavy/low/336.vcd"	// i am amused by entire
		scene "scenes/Player/Heavy/low/329.vcd"	// look at your little baby guns...
		scene "scenes/Player/Heavy/low/324.vcd"	// you are so small!
		scene "scenes/Player/Heavy/low/2080.vcd"	// rare laughter 9
	}
	Response NOWP-HeavyImminentKillSpree
	{
		scene "scenes/Player/Heavy/low/1952.vcd"	// your luck runs out!
		scene "scenes/Player/Heavy/low/2104.vcd"	// i should have done this LONG ago!
		scene "scenes/Player/Heavy/low/2110.vcd"	// i think you should fight someone much much smaller
		scene "scenes/Player/Heavy/low/2079.vcd"	// i have plan for you; more pain..
		scene "scenes/Player/Heavy/low/2084.vcd"	// i promise you pain without end
	}
	Response NOWP-TomislavQuietHeavy
	{
		scene "scenes/Player/Heavy/low/2093.vcd"	// shh! sasha is asleep...
		scene "scenes/player/heavy/low/2106.vcd"	// is not fair to use gun on...
		scene "scenes/player/heavy/low/330.vcd"	// you, yes you! you are dead!
		scene "scenes/Player/Heavy/low/307.vcd"	// da, this will work
	}
	Response NOWP-BrickKillHeavy
	{
		scene "scenes/Player/Heavy/low/313.vcd"	// more rubble, less trouble!
		scene "scenes/player/heavy/low/2103.vcd"	// the burning you feel? it is shame...
		scene "scenes/player/heavy/low/2102.vcd"	// you feel shame, yes?
		scene "scenes/Player/Heavy/low/1953.vcd"	// let this be lesson for you!
	}
	Response NOWP-KGBKillInitialHeavy
	{
		scene "scenes/Player/Heavy/low/315.vcd"	// now is coward killing time!
		scene "scenes/Player/Heavy/low/319.vcd"	// ohh run ruuunnn im coming for you!
		scene "scenes/Player/Heavy/low/325.vcd"	// time to hide cowards
		scene "scenes/Player/Heavy/low/326.vcd"	// im coming for you!
		scene "scenes/Player/Heavy/low/331.vcd"	// i think you need more men...
		scene "scenes/Player/Heavy/low/341.vcd"	// is good time to run cowards
		scene "scenes/Player/Heavy/low/2113.vcd"	// i am not done with you yet
	}

	Rule NOWP-KilledHMGHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsHMG KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-HeavyJudgementalLines
		Response NOWP-TomislavQuietHeavy
	}
	Rule NOWP-KilledAA12Heavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsAA12 KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-HeavyJudgementalLines
		Response NOWP-HeavyImminentKillSpree
	}
	Rule NOWP-KilledChainsawHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsChainsaw KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-KGBKillInitialHeavy
	}
	Rule NOWP-KilledSuperNailgunHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsSuperNailgun KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-HeavyImminentKillSpree
	}
	Rule NOWP-KilledSuperNailgunHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsSuperNailgun KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-TomislavQuietHeavy
		Response NOWP-KGBKillInitialHeavy
	}
	Rule NOWP-KilledBrassBeastHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsBrassBeast KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-HeavyImminentKillSpree
		Response NOWP-HeavyJudgementalLines
	}
	Rule NOWP-KilledTomislavHeavy
	{
		criterion ConceptKilledPlayer IsHeavy WeaponIsTomislavMini KilledPlayerDelay 30PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:30"
		Response NOWP-TomislavQuietHeavy
	}

	rule NOWP-BrickKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:10"
		Response NOWP-BrickKillHeavy
	}
	rule NOWP-FamilyBizKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsFamilyBiz KilledPlayerDelay 45PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:10"
		Response NOWP-HeavyJudgementalLines
	}
	rule NOWP-MobShotgunKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsMobShotgun KilledPlayerDelay 45PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:10"
		Response NOWP-TomislavQuietHeavy
	}
	rule NOWP-BombShotKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsBombShot KilledPlayerDelay 45PercentChance HeavyNotKillSpeech
		ApplyContext "HeavyKillSpeech:1:10"
		Response NOWP-HeavyJudgementalLines
		Response NOWP-HeavyImminentKillSpree
	}
	rule NOWP-KGBInitialKillHeavy															// Hopefully only fires generally with the first KGB kill in a chain, to imply a now-angry heavy incoming!
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsKGB KilledPlayerDelay 65PercentChance HeavyNotKillSpeechMelee WeaponFunctionCooledDown
		ApplyContext "SetWeaponDelayTime:1:15"												// 15s cooldown approx until Heavy can say something again
		ApplyContext "HeavyKillSpeechMelee:1:10"
		Response NOWP-KGBKillInitialHeavy
	}
	rule NOWP-PipeKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsPipe KilledPlayerDelay 45PercentChance HeavyNotKillSpeechMelee
		ApplyContext "HeavyKillSpeechMelee:1:10"
		Response NOWP-HeavyImminentKillSpree
		Response NOWP-BrickKillHeavy
	}
	Rule NOWP-SteelFistsKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsSteelFists KilledPlayerDelay 45PercentChance HeavyNotKillSpeechMelee
		ApplyContext "HeavyKillSpeechMelee:1:10"
		Response KilledPlayerMeleeMetalHeavy
		Response KilledPlayerMeleeHeavy
	}
	rule NOWP-PunchOMaticInitialKillHeavy													// Copied from KGB, slightly lower chance for the Punchomatic
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsPunchOMatic KilledPlayerDelay 40PercentChance HeavyNotKillSpeechMelee WeaponFunctionCooledDown
		ApplyContext "SetWeaponDelayTime:1:15"												// 15s cooldown approx until Heavy can say something again
		ApplyContext "HeavyKillSpeechMelee:1:10"
		Response NOWP-KGBKillInitialHeavy
	}

	rule NOWP-PanKillHeavy
	{
		criteria ConceptKilledPlayer IsHeavy WeaponIsPan KilledPlayerDelay 60PercentChance HeavyNotKillSpeechMelee
		ApplyContext "HeavyKillSpeechMelee:1:10"
		Response NOWP-BrickKillHeavy
	}

	rule NOWP-HeavyFireAAGun																// When Heavy -starts- firing an AA Gun type wep, make a face. EXCLUDES the retail AA gun, this is just stuff that uses the wep type!
	{
		criteria ConceptFireMinigun IsHeavy WeaponIsAAGunType WeaponIsNotAAGun
		Response HeavyFireMinigun
	}
	Rule NOWP-HeavyTimeFiringAAGunShort														// Last I checked this didn't work, but let's see if it does now
	{
		criteria ConceptFireAAGunTalk IsHeavy WeaponIsAAGunType WeaponIsNotAAGun TimeFiringMinigunShort 30PercentChance
		Response HeavyTimeFiringAAGunShort
	}
	Rule NOWP-HeavyTimeFiringAAGunLong
	{
		criteria ConceptFireAAGunTalk IsHeavy WeaponIsAAGunType WeaponIsNotAAGun TimeFiringMinigunLong 50PercentChance
		Response HeavyTimeFiringAAGunLong
	}
	Rule NOWP-HeavyTimeFiringAAGunReallyLong
	{
		criteria ConceptFireAAGunTalk IsHeavy WeaponIsAAGunType WeaponIsNotAAGun TimeFiringMinigunReallyLong 50PercentChance
		Response HeavyTimeFiringAAGunReallyLong
	}
	Rule NOWP-HeavyTimeFiringChainsawShort
	{
		criteria ConceptFireMinigunTalk IsHeavy WeaponIsChainsaw TimeFiringMinigunShort 30PercentChance
		Response HeavyTimeFiringMinigunShort
		Response NOWP-HeavyTimeFiringChainsawShort											// Plays in addition to the base Minigun fire responses
	}
	Rule NOWP-HeavyTimeFiringChainsawLong
	{
		criteria ConceptFireMinigunTalk IsHeavy WeaponIsChainsaw TimeFiringMinigunLong 50PercentChance
		Response HeavyTimeFiringMinigunLong
		Response NOWP-HeavyTimeFiringChainsawLong
	}
	Rule NOWP-HeavyTimeFiringChainsawReallyLong
	{
		criteria ConceptFireMinigunTalk IsHeavy WeaponIsChainsaw TimeFiringMinigunReallyLong 50PercentChance
		Response HeavyTimeFiringMinigunReallyLong
		Response NOWP-HeavyTimeFiringChainsawReallyLong
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Rule NOWP-MeleeDareChainsawHeavy														// Lets you play melee dare lines with the Chainsaw out
	{
		criteria ConceptPlayerBattleCry IsHeavy WeaponIsChainsaw IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatHeavy
	}

//------------------------------------------------------------------------------------------------------------//
// Engineer
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsRescue" 				"item_name" "TF_WEAPON_RESCUE_RANGER" 			"required" weight 35
	criterion "WeaponIsMetalNailgun" 		"item_name" "TF_WEAPON_NAILGUN_METAL" 			"required" weight 35
	criterion "WeaponIsRailgun" 			"item_name" "TF_WEAPON_RAILGUN_DM" 				"required" weight 35
	criterion "WeaponIsFrontier" 			"item_name" "TF_WEAPON_FRONTIERJUSTICE" 		"required" weight 35
	criterion "WeaponIsWindowMaker" 		"item_name" "TF_WEAPON_WIDOWMAKER" 				"required" weight 35

	criterion "WeaponIsRevolverEngi" 		"item_name" "TF_WEAPON_REVOLVER_ENGI" 			"required" weight 75
	criterion "WeaponIsDispenserizer" 		"item_name" "TF_WEAPON_DISPENSERIZER" 			"required" weight 75
	criterion "WeaponIsCouncilman" 			"item_name" "TF_WEAPON_COUNCILMAN" 				"required" weight 75
	criterion "WeaponIsMobileGun"	 		"item_name" "TF_WEAPON_MOBILEGUN" 				"required" weight 75

	criterion "WeaponIsJag" 				"item_name" "TF_WEAPON_JAG" 					"required" weight 35
	criterion "WeaponIsSpikeWrench" 		"item_name" "TF_WEAPON_NAIL_WRENCH" 			"required" weight 35
	criterion "WeaponIsEureka" 				"item_name" "TF_WEAPON_REMOTE_UPGRADE" 			"required" weight 35
	criterion "WeaponIsPDQSlinger" 			"item_name" "TF_WEAPON_PDQSLINGER" 				"required" weight 35
	criterion "WeaponIsGoldWrench" 			"item_name" "TF_WEAPON_GOLD_WRENCH" 			"required" weight 35

	criterion "WeaponIsTeamRadio" 			"item_name" "TF_WEAPON_REMOTEDEPLOY_PDA" 		"required" weight 35

	Criterion "FiredDispenserRecently" 		"FiredDispenserRecently" "1" 					"required" weight 10
	Criterion "DidNotFireDispenserRecently" "FiredDispenserRecently" "!=1" 					"required" weight 10
	Criterion "FiredDispenserSuperRecently" "FiredDispenserSuperRecently" "1" 				"required" weight 10
	Criterion "DidNotFireDispenserSuperRecently" "FiredDispenserSuperRecently" "!=1" 		"required" weight 10

	Criterion "SwingJag" 					"JagSwingFirst" "1" 							"required" weight 10
	Criterion "NotSwingJag" 				"JagSwingFirst" "!=1" 							"required" weight 10
	Criterion "SwingingJag" 				"JagSwinging" "1" 								"required" weight 10
	Criterion "NotSwingingJag" 				"JagSwinging" "!=1" 							"required" weight 10
	Criterion "EngineerIsTired" 			"EngineerJagTired" "1" 							"required" weight 35
	Criterion "EngineerIsntRestedYet" 		"EngineerCoolingOff" "1" 						"required" weight 35
	Criterion "LoadoutIsPDQSlinger" 		"loadout_slot_melee" "P.D.Q." 					"required" weight 35 // First time using it. This searches for the item's screen name instead of the internal name (???)
	Criterion "LoadoutIsTeamRadio" 			"loadout_slot_pda" "PDA: Remote Signal" 		"required" weight 35

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "EngineerTauntGuitar"															// Does NOT hide weapon, a bit glitchy. Tauntkill also does not work (obviously)
	{
		scene "scenes/player/engineer/low/taunt07.vcd"
	}
	response "EngineerTauntRobotArm"														// No code for Taunt Kill. Also, no bodygroup so I hope you don't have carpal tunnel because
	{
		scene "scenes/player/engineer/low/taunt09.vcd"
	}
	Response "EngineerTauntEurekaEffect"													// No effects or sound. Maybe add some voice lines / particles to sell it more, also don't forget to add the sound back
	{
		scene "scenes/player/engineer/low/taunt_drg_melee.vcd"	
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-EngineerTauntNailgun
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsNailgun
		response EngineerTauntSecondary
	}
	rule NOWP-EngineerTauntEurekaAlt														// Weapons that have a super unique taunt in Live get a different one, if nothing else!
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsEureka
		response EngineerTauntSecondary														// Twirl looks kinda cool on Wrenches, honestly
	}
	rule NOWP-EngineerTauntUkulele
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsUkulele
		response EngineerTauntPrimary														// Melee taunt works, but primary is livelier
	}
	rule NOWP-EngineerTauntPDQSlinger
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsPDQSlinger
		response EngineerTauntSecondary
	}

	rule NOWP-EngineerTauntThrowable
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsThrowMIRV
		response EngineerTauntSecondary
	}
	rule NOWP-EngineerTauntFistsDM
	{
		criteria ConceptPlayerTaunt IsEngineer WeaponIsDMFists
		response EngineerTauntPrimary
	}
	rule NOWP-EngineerTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsEngineer ItemIsNoisemaker
		response EngineerTauntPrimary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-EngineerPersonalSpace
	{
		scene "scenes/Player/Engineer/low/19.vcd"	// hell, that was easy
		scene "scenes/Player/Engineer/low/3616.vcd"	// this here's just gonna keep happenin and happenin
		scene "scenes/Player/Engineer/low/3659.vcd"	// don't go meddlin in my business
		scene "scenes/player/Engineer/low/177.vcd"	// why don't y'all get along...
	}
	Response NOWP-EngineerMurderCasual
	{
		scene "scenes/Player/Engineer/low/3637.vcd"	// you done incurred my wrath son
		scene "scenes/Player/Engineer/low/3611.vcd"	// it ain't gettin any harder for me to kill ya!	
		scene "scenes/Player/Engineer/low/3588.vcd"	// y'all gotta run a lot faster than that
		scene "scenes/Player/Engineer/low/3682.vcd"	// y'all come back now, more where that came from
		scene "scenes/Player/Engineer/low/3641.vcd"	// shoulda-oughta brought more gun son
	}
	Response NOWP-EngineerJudgementalLines
	{
		scene "scenes/Player/Engineer/low/3581.vcd"	// i wish y'all could see how bad I'm kickin...
		scene "scenes/Player/Engineer/low/3679.vcd"	// that catch your eye, son?
		scene "scenes/Player/Engineer/low/3585.vcd"	// you just aint doin it right
		scene "scenes/Player/Engineer/low/3615.vcd"	// that there is just a sad display boy	
	}
	Response NOWP-RailGunKillEngineer														// Everything but the autopilot line, also removed the predelays
	{
		scene "scenes/Player/Engineer/low/3604.vcd"	// that's from yours truly, son
		scene "scenes/Player/Engineer/low/3700.vcd"	// tagged ya
		scene "scenes/Player/Engineer/low/3704.vcd"	// gotcha
	}
	Response NOWP-BrickKillEngineer
	{
		scene "scenes/Player/Engineer/low/3682.vcd"	// y'all come back now, more where that came from
		scene "scenes/Player/Engineer/low/3633.vcd"	// now you dont look like a happy camper
		scene "scenes/Player/Engineer/low/3615.vcd"	// that there is just a sad display boy	
		scene "scenes/Player/Engineer/low/3673.vcd"	// slap a poultice on that doc!!
	}
	Response NOWP-DispenserizerKillEngineer
	{
		scene "scenes/Player/Engineer/low/3606.vcd"	// aint too fast for me n my machines now are ya
		scene "scenes/Player/Engineer/low/3587.vcd"	// yaoughta stand back a little more for me n' my...
		scene "scenes/Player/Engineer/low/3607.vcd"	// looks like that there just werent the place youghta be standin
		scene "scenes/Player/Engineer/low/3586.vcd"	// stop trying to mess with my contraptions
	}
	Response NOWP-ObjectorKillEngineer														// Mostly copied from vs Pyro domination lines
	{
		scene "scenes/Player/Engineer/low/3583.vcd"
		scene "scenes/Player/Engineer/low/3664.vcd"
		scene "scenes/Player/Engineer/low/3665.vcd"
		scene "scenes/Player/Engineer/low/3666.vcd"
	}
	Response NOWP-SpikeWrenchKillEngineer
	{
		scene "scenes/Player/Engineer/low/3610.vcd"	// y'all come back now!
		scene "scenes/Player/Engineer/low/3682.vcd"	// y'all come back now, more where that came from
		scene "scenes/Player/Engineer/low/3581.vcd"	// i wish y'all could see how bad I'm kickin...
		scene "scenes/Player/Engineer/low/3623.vcd"	// what in sam hill were you thinkin...
		scene "scenes/Player/Engineer/low/3660.vcd" // i just beat on your sneaky ass like a mule boy
	}
	Response NOWP-JagSwingExtendedTime
	{
		scene "scenes/Player/Engineer/low/69.vcd"	// git goin!
		scene "scenes/Player/Engineer/low/3697.vcd"	// go on git!
		scene "scenes/Player/Engineer/low/1339.vcd"	// pain grunt
		scene "scenes/Player/Engineer/low/1328.vcd"	// aw shucks
		scene "scenes/Player/Engineer/low/1338.vcd"	// minor grunting
	}
	Response NOWP-EngiExtraKillLines														// Some lines backported from his Paladins cameo appearance
	{
		speak "Engineer.KilledPlayer01"	// well ain't that somethin
		speak "Engineer.KilledPlayer02"	// go on git, stinkin varmint
		speak "Engineer.KilledPlayer03"	// the wonders of civil engineering!
	}

	rule NOWP-RescueRangerKillEngineer														// All Engi kill responses need way more conditionals in order to have a chance of firing above the stock Engi responses at all
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsShotgunPrimary WeaponIsRescue WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerJudgementalLines
		Response NOWP-EngiExtraKillLines
	}
	rule NOWP-MobShotgunKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsShotgunPrimary WeaponIsMobShotgun WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerMurderCasual
		Response NOWP-EngineerPersonalSpace
		Response NOWP-EngineerPersonalSpace
	}
	rule NOWP-RailGunKillEngineer															// Reuse Wrangler lines for S. Railgun kills. Also a bit fiddly with the response priority
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsShotgunPrimary WeaponIsRailgun WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-RailGunKillEngineer
		Response NOWP-RailGunKillEngineer
		Response NOWP-EngiExtraKillLines
		Response NOWP-DispenserizerKillEngineer
	}
	rule NOWP-PneumaticKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsNailgun WeaponIsMetalNailgun WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerPersonalSpace	
		Response NOWP-EngiExtraKillLines
	}
	rule NOWP-FrontierJusticeKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsShotgunPrimary WeaponIsFrontier WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerMurderCasual
		Response NOWP-EngineerPersonalSpace
	}
	rule NOWP-WindowMakerKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsShotgunPrimary WeaponIsWindowMaker WeaponIsNotSentry KilledPlayerDelay 30PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerMurderCasual
		Response NOWP-DispenserizerKillEngineer
	}
	rule NOWP-EngiRevolverKillEngineer														// Same as above, a bit jank for no good reason...
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsPistol WeaponIsRevolverEngi WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerMurderCasual
		Response NOWP-EngineerMurderCasual
		Response NOWP-RailGunKillEngineer
	}
	rule NOWP-BrickKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsBrickNOWP WeaponIsNotSentry KilledPlayerDelay 60PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-BrickKillEngineer
	}
	rule NOWP-DispenserizerKillEngineer														// Note the Dispenserizer has to be OUT for these to play - no special response for autodetonation w/ other weps
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsPipebomb WeaponIsDispenserizer KilledPlayerDelay 45PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response KillTauntsEngineerSpecial
		Response KillTauntsEngineerSpecial
		Response NOWP-DispenserizerKillEngineer
		Response NOWP-EngineerPersonalSpace
	}
	rule NOWP-FlintlockKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsDoubleShotgun WeaponIsFlintlockMulti WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngineerMurderCasual
		Response NOWP-EngineerPersonalSpace
	}
	rule NOWP-EngiCouncilmanKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsPistol WeaponIsCouncilman WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-RailGunKillEngineer
		Response NOWP-EngiExtraKillLines
		Response NOWP-EngineerPersonalSpace
	}
	rule NOWP-EngiMobileGunKillSentryEngineer	
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsPistol WeaponIsMobileGun KilledPlayerDelay 45PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response EngineerLaserPointer
		Response EngineerLaserPointer
		Response KillTauntsEngineerSpecial
		Response NOWP-DispenserizerKillEngineer
	}
	rule NOWP-SpikeWrenchKillEngineer														// Slightly less hostile more condescending lines
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsSpikeWrench WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response NOWP-SpikeWrenchKillEngineer
	}
	rule NOWP-EurekaKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsEureka WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response NOWP-DispenserizerKillEngineer
		Response NOWP-EngiExtraKillLines
		Response NOWP-EngineerPersonalSpace
		Response NOWP-EngineerPersonalSpace
	}
	Rule NOWP-EngineerKillGoldWrench														// Higher base chance to fire since the weapon itself is rare!
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsGoldWrench WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response EngineerGoldenWrench
	}

	rule NOWP-PanKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsPan WeaponIsNotSentry KilledPlayerDelay 60PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response NOWP-BrickKillEngineer
	}
	rule NOWP-ObjectorKillEngineer
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsObjector WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response NOWP-ObjectorKillEngineer
	}
	rule NOWP-FistsDMKillEngineer															// It's punching, so it's only appropriate
	{
		criteria ConceptKilledPlayer IsEngineer WeaponIsWrench WeaponIsDMFists WeaponIsNotSentry KilledPlayerDelay 45PercentChance EngineerNotKillSpeechMelee
		ApplyContext "EngineerKillSpeechMelee:1:10"
		Response EngySwingFist
	}

	Rule NOWP-EngineerFireDispenserizer														// Occasionally say Dispenser building lines when shooting, buffered 10s between each at lowest
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsDispenserizer IsNotDominating 50PercentChance DidNotFireDispenserRecently
		ApplyContext "FiredDispenserRecently:1:15"
		ApplyContext "FiredDispenserSuperRecently:1:5"
		Response PlayerBuildingDispenserEngineer
	}

	rule NOWP-JagSwingInitialTime															// Copied from Heavy's fist-swings since oh my god what the fuck is going on here
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsJag IsNotDaring IsNotDominating NotSwingJag
		ApplyContext "JagSwingFirst:1:10"
		Response PlayerExpressionAttackEngineer
	}
	rule NOWP-JagSwingExtendedTime															// Essentially, swinging Jag once sets a flag. If flag is active, do another set of responses that loops by setting its own flag?
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsJag 20PercentChance IsNotDaring IsNotDominating SwingJag NotSwingingJag
		ApplyContext "SwingingJag:2:6"
		ApplyContext "EngineerJagTired:1:15"												// Once he starts, set a tired flag for 15s
		Response NOWP-JagSwingExtendedTime
	}
//	rule NOWP-JagSwingTired																	// When Engineer loses both Jag swinging flags, and still has the Jag out, say a line, then don't say anything else for 15s
//	{
//		criteria ConceptPlayerExpression IsEngineer WeaponIsJag IsNotDaring IsNotDominating EngineerIsTired EngineerIsntRestedYet 100PercentChance
//		ApplyContext "EngineerCoolingOff:1:10"												// This entire thing doesnt fUCKING WORK
//		Response DeploySentryEngineer
//	}
	Rule NOWP-EngySwingPDQSlingerStart
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsPDQSlinger EngineerNotKillSpeech IsNotDominating IsNotEngyFistSwung
		ApplyContext "EngyFistSwung:1:20" 													// Fires every 20 seconds like in Live
		Response EngySwingFistStart
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-EngyCritsReady															// Mostly copied from Live's lines, but also a few more irate responses (implying more immediate action)
	{
		scene "scenes/player/Engineer/low/167.vcd"	// y'all about to have a real bad day...
		scene "scenes/player/Engineer/low/172.vcd"	// start prayin, boy!
		scene "scenes/player/Engineer/low/177.vcd"	// why don't y'all get along...
		scene "scenes/player/Engineer/low/169.vcd"	// cmere sissy!
		scene "scenes/player/Engineer/low/174.vcd"	// I'm gonna lay you out!!
	}
	Response NOWP-EngineerRemoteDeploy
	{
		scene "scenes/Player/Engineer/low/69.vcd" 	// git goin!
		scene "scenes/Player/Engineer/low/68.vcd" 	// move 'em out
		scene "scenes/Player/Engineer/low/67.vcd" 	// gogogo
		scene "scenes/Player/Engineer/low/3697.vcd" // go on! git!
	}

	Rule NOWP-EngyCritsReady																// Unlike Live, this is more or less unconditional since R. Crits trigger with any Lvl. 3 death. No way to check for building level, though
	{
		criteria ConceptLostObject IsEngineer WeaponIsFrontier 75PercentChance EngineerNotKillSpeech
		ApplyContext "EngineerKillSpeech:1:10"
		Response NOWP-EngyCritsReady
	}
//	rule NOWP-DamagedByOwnDispenserEngineer													// Slightly hacky, when you get severe damage VERY shortly after firing your Dispenserizer, you probably just walked into it like a dumbass
//	{
//		criteria ConceptAttackerPain IsEngineer WeaponIsDispenserizer 75PercentChance FiredDispenserRecently DidNotFireDispenserSuperRecently
//		Response PlayerNegativeEngineer														// Conditions: Took heavy damage with Dispenserizer out, after 5s before 15s (if he wanted to Jump, he'd do so immediately)
//	}
	Rule NOWP-KillTauntsEngineerMiniSentryWithPDQ											// Replicates Mini-Sentry kill-lines as best I can
	{
		criteria ConceptKilledPlayer WeaponIsSentrygun LoadoutIsPDQSlinger IsEngineer 20PercentChance	// Checks for a Sentrygun kill if the Engineer has the PDQSlinger equipped in their inventory, even if not active presently
		ApplyContext "EngineerKillSpeech:1:10"
		Response KillTauntsEngineerMiniSentry
	}
	Rule NOWP-DeploySentryTeamRadioEngineer													// If Engi has the Remote Signal then he fires different lines for deploying buildings
	{
		criteria ConceptEngineerDeployBuilding IsEngineer WeaponIsTeamRadio					// Only if Engi deploys using his PDA - if he thwacks it on the ground he'd still likely be exhuasted from carrying it
		Response NOWP-EngineerRemoteDeploy
	}

//------------------------------------//
// Weapon Speech
//------------------------------------//
	Response NOWP-PlayerTeamRadioChatter
	{
		speak "TeamRadio.Scout01"
		speak "TeamRadio.Scout02"
		speak "TeamRadio.Soldier01"
		speak "TeamRadio.Soldier02"
		speak "TeamRadio.Pyro01"
		speak "TeamRadio.Pyro02"
		speak "TeamRadio.Demoman01"
		speak "TeamRadio.Demoman02"
		speak "TeamRadio.Heavy01"
		speak "TeamRadio.Heavy02"
		speak "TeamRadio.Engineer01"
		speak "TeamRadio.Engineer02"
		speak "TeamRadio.Medic01"
		speak "TeamRadio.Medic02"
		speak "TeamRadio.Sniper01"
		speak "TeamRadio.Sniper02"
		speak "TeamRadio.Spy01"
		speak "TeamRadio.Spy02"
		speak "TeamRadio.Civilian01"
		speak "TeamRadio.Civilian02"
		speak "TeamRadio.OFMercenary01"
		speak "TeamRadio.OFMercenary02"
	}

	Rule NOWP-PlayerTeamRadioSpecialAttack
	{
		criteria ConceptTauntLaugh IsEngineer WeaponIsTeamRadio WeaponIsNotSpeaking
//		ApplyContext "WeaponSpeaking:1:10"
		Response NOWP-PlayerTeamRadioChatter
	}
	Rule NOWP-PlayerTeamRadioSpecialAttackInactive
	{
		criteria ConceptTauntLaugh IsEngineer IsWeaponMelee WeaponIsNotPan WeaponIsNotUkulele IsNotCrossHairEnemy LoadoutIsTeamRadio WeaponIsNotSpeaking	// Tweak since it's a bit difficult to trigger voice lines on a PDA. Excludes for Pan and Bonkulele since they have their own things
		ApplyContext "WeaponSpeaking:1:10"
		Response NOWP-PlayerTeamRadioChatter
	}
	Rule NOWP-PlayerTeamRadioSpecialAttackInactiveNoisemaker
	{
		criteria ConceptTauntLaugh IsEngineer ItemIsNoisemaker IsNotCrossHairEnemy LoadoutIsTeamRadio WeaponIsNotSpeaking	// Hack fix since Noisemaker is weird...
		ApplyContext "WeaponSpeaking:1:10"
		Response NOWP-PlayerTeamRadioChatter
	}

//------------------------------------------------------------------------------------------------------------//
// Medic
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsCrusaderCrossbow" 	"item_name" "TF_WEAPON_CROSSBOW" 				"required" weight 35
	criterion "WeaponIsSatchel" 			"item_name" "TF_WEARABLE_MEDBAG" 				"required" weight 35
	criterion "WeaponIsSyringeShot" 		"item_name" "TF_WEAPON_SYRINGE_SHOT" 			"required" weight 35

	criterion "WeaponIsQF" 					"item_name" "TF_WEAPON_QUICK_FIX" 				"required" weight 35
	criterion "WeaponIsKralleMKII" 			"item_name" "TF_WEAPON_KRALLE" 					"required" weight 35

	criterion "WeaponIsNotUbersaw" 			"item_name" "!=The Ubersaw" 					"required" weight 35
	criterion "WeaponIsBattleNeedle" 		"item_name" "TF_WEAPON_BATTLENEEDLE" 			"required" weight 35
	criterion "WeaponIsMedicAmputator" 		"item_name" "TF_WEAPON_AMPUTATOR" 				"required" weight 35
	criterion "WeaponIsHealSaw" 			"item_name" "TF_WEAPON_KRANKENSAGE" 			"required" weight 35
	criterion "WeaponIsMarbleBust" 			"item_name" "TF_WEAPON_HIPPOCRATIC_BUST" 		"required" weight 35

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "MedicTauntHeroic"																// Technically missing sounds, but the quietness is nice, could just use a bit of rustling though | Maybe a small snort or laugh like he's just yukking it up
	{
		scene "scenes/player/medic/low/taunt09.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-MedicTauntCrossbow
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsCrusaderCrossbow
		response MedicTauntPrimary
	}
	rule NOWP-MedicTauntSatchel
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsSatchel
		response MedicTauntSecondary
	}
	rule NOWP-MedicTauntUkulele																// Most non-bonesaw Medic Melees need a non-bonesaw taunt. Unfortunately, have to set that semi-manually here, ack
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsUkulele
		response MedicTauntSecondary														// Secondary taunt since this has a predisposition toward healing (yourself)
	}
	rule NOWP-MedicTauntSolemnVow
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsMarbleBust
		response MedicTauntSecondary
	}

	rule NOWP-MedicTauntCrowbar
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsCrowbar 
		response MedicTauntPrimary
	}
	rule NOWP-MedicTauntPan																	// Pan gets taunt kills for funnies (holdover until laugh taunt works)
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsPan
		response MedicTauntUbersaw
	}
	rule NOWP-MedicTauntObjector
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsObjector
		response MedicTauntPrimary
	}

	rule NOWP-MedicTauntThrowable
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsThrowMIRV
		response MedicTauntSecondary
	}
	rule NOWP-MedicTauntBrick
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsBrickNOWP								// Custom response for Medic + Spy brick. Brick gets his Primary taunt instead of the regular Secondary!
		response MedicTauntPrimary
	}
	rule NOWP-MedicTauntFistsDM
	{
		criteria ConceptPlayerTaunt IsMedic WeaponIsDMFists
		response MedicTauntPrimary
	}
	rule NOWP-MedicTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsMedic ItemIsNoisemaker
		response MedicTauntSecondary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-CrossbowMedicFireAlly
	{
		scene "scenes/Player/Medic/low/679.vcd"	// come over here! i promise i will heal you!
		scene "scenes/Player/Medic/low/661.vcd"	// hold still schweinhund... this will only sting for a moment
		scene "scenes/Player/Medic/low/669.vcd"	// turn your head and cough!
		scene "scenes/Player/Medic/low/597.vcd"	// you are trying my patience!
		scene "scenes/Player/Medic/low/1224.vcd" // stalemate groan
		scene "scenes/Player/Medic/low/1223.vcd" // stalemate groan
	}
	Response NOWP-MedicMurderCasual
	{
		scene "scenes/Player/Medic/low/646.vcd" // the healing is not as rewarding as...
		scene "scenes/Player/Medic/low/647.vcd" // the healing leaves little time for...
		scene "scenes/Player/Medic/low/680.vcd" // all i can tell you about this next procedure -
	}
	Response NOWP-BrickKillMedic
	{
		scene "scenes/Player/Medic/low/654.vcd" // did the frauleins have...
		scene "scenes/Player/Medic/low/656.vcd" // whoops! that was not medicine
		scene "scenes/Player/Medic/low/1240.vcd"	// would you like a second opinion?
	}

	rule NOWP-CrossbowKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsCrusaderCrossbow KilledPlayerDelay 45PercentChance MedicNotKillSpeech	// All of Medic's stuff gets a 45% base rate since he has difficulty killing people
		ApplyContext "MedicKillSpeech:1:10"
		Response NOWP-MedicMurderCasual
	}
	rule NOWP-BrickKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance MedicNotKillSpeech
		ApplyContext "MedicKillSpeech:1:10"
		Response NOWP-BrickKillMedic
	}
	rule NOWP-SyringeShotKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsSyringeShot KilledPlayerDelay 45PercentChance MedicNotKillSpeech
		ApplyContext "MedicKillSpeech:1:10"
		Response NOWP-MedicMurderCasual
		Response NOWP-MedicMurderCasual
		Response NOWP-BrickKillMedic
	}
	rule NOWP-VitaKillKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsBattleNeedle KilledPlayerDelay 45PercentChance MedicNotKillSpeechMelee
		ApplyContext "MedicKillSpeechMelee:1:10"
		Response NOWP-MedicMurderCasual
	}
	rule NOWP-HealSawKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsHealSaw KilledPlayerDelay 45PercentChance MedicNotKillSpeechMelee
		ApplyContext "MedicKillSpeechMelee:1:10"
		Response NOWP-MedicMurderCasual
	}

	rule NOWP-PanKillMedic
	{
		criteria ConceptKilledPlayer IsMedic WeaponIsPan KilledPlayerDelay 60PercentChance MedicNotKillSpeechMelee
		ApplyContext "MedicKillSpeechMelee:1:10"
		Response NOWP-BrickKillMedic
	}

	Rule NOWP-MedicFireCrossbowAlly_1
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnScout
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_2
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnSoldier
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_3
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnPyro
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_4
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnDemoman
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_5
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnHeavy
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_6
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnEngineer
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_7
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnMedic
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_8
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnSniper
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_9
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnSpy
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_10
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 45PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy IsOnCivilian
		ApplyContext "SetWeaponDelayTime:1:10"
		Response NOWP-CrossbowMedicFireAlly
	}
	Rule NOWP-MedicFireCrossbowAlly_Generic
	{
		criteria ConceptFireWeapon IsMedic WeaponIsCrusaderCrossbow IsNotDominating 10PercentChance WeaponFunctionCooledDown IsNotCrossHairEnemy
		ApplyContext "SetWeaponDelayTime:1:15"
		Response NOWP-CrossbowMedicFireAlly
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-MedicDebuffApplyEnemy
	{
		scene "scenes/Player/Medic/low/677.vcd"	// prepare for your examination...
		scene "scenes/Player/Medic/low/680.vcd" // all i can tell you about this next procedure -
		scene "scenes/Player/Medic/low/1240.vcd"	// would you like a second opinion?
		scene "scenes/Player/Medic/low/1241.vcd"	// you have 30 seconds to live
	}

	rule NOWP-SatchelJumpMedic																// Say something when jumping with the Satchel! No cooldown, though by default the weapon can refire every 8s anyway
	{
		criteria ConceptFireWeapon IsMedic WeaponIsSatchel
		Response PlayerBattleCryMedic
		Response PlayerGoMedic
	}

	Rule NOWP-PlayerBoostMedic_1															// Since TF_WEAPON_UMBRELLA just fires the Go voice command, hook into it for the Amputator
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnScout
		Response PlayerCapturedPointMedic													// Play his captured point lines, as encouragement
	}
	Rule NOWP-PlayerBoostMedic_2															// Unfortunately, duplicated 10+ times since haha, no crosshair_ally criterion exists!
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnSoldier
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_3
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnPyro
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_4
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnDemoman
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_5
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnHeavy
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_6
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnEngineer
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_7
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnMedic
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_8
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnSniper
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_9															// There's some weird behavior with disguised enemy Spies, but since it occurs with regular Melee Dares too, screw it
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnSpy
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerBoostMedic_10
	{
		criteria ConceptPlayerGo IsMedic WeaponIsMedicAmputator IsNotCrossHairEnemy IsOnCivilian
		Response PlayerCapturedPointMedic
	}
	Rule NOWP-PlayerDebuffMedic																// Special responses for a debuff boost!
	{
		criteria ConceptPlayerBattleCry IsMedic WeaponIsMarbleBust IsCrossHairEnemy
		Response NOWP-MedicDebuffApplyEnemy
	}

//------------------------------------------------------------------------------------------------------------//
// Sniper
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsMarker" 				"item_name" "TF_WEAPON_WA2000_MARKER" 			"required" weight 35
	criterion "WeaponIsSydneySleeper" 		"item_name" "TF_WEAPON_DARTGUN" 				"required" weight 35
	criterion "WeaponIsSkullbuster" 		"item_name" "TF_WEAPON_SKULLBUSTER_RIFLE" 		"required" weight 35

	criterion "WeaponIsPiss" 				"item_name" "TF_WEAPON_EXPLOSIVE_JARATE" 		"required" weight 35
	criterion "WeaponIsNotPiss" 			"item_name" "!=TF_WEAPON_EXPLOSIVE_JARATE" 		"required" weight 35
	criterion "WeaponIsSniperSTEN" 			"item_name" "TF_WEAPON_STEN_NAILGUN" 			"required" weight 35
	criterion "WeaponIs45" 					"item_name" "TF_WEAPON_UMP45" 					"required" weight 35
	criterion "WeaponIsRevolverRifle" 		"item_name" "TF_WEAPON_REVOLVER_RIFLE" 			"required" weight 35
	criterion "WeaponIsProSMG" 				"item_name" "TF_WEAPON_PRO_SMG" 				"required" weight 35
	criterion "WeaponIsGoldMG" 				"item_name" "TF_WEAPON_GOLD_MACHINEGUN" 		"required" weight 35

	criterion "WeaponIsFlingshot" 			"item_name" "TF_WEAPON_BOOMERANG" 				"required" weight 35

	Criterion "ScoutRespectNotEarned" 		"SkullbusterScoutKill" "!=1" 					"required" weight 10
	Criterion "ScoutRespectEarned" 			"SkullbusterScoutKill" "1" 						"required" weight 10

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	response "SniperTauntICU"
	{		
		scene "scenes/player/sniper/low/taunt_i_see_you_primary.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-SniperTauntSkullBuster														// Makes use of an ODD interaction - he plays a Scout taunt!!
	{
		criteria ConceptPlayerTaunt IsSniper WeaponIsSkullbuster
		response ScoutTauntPrimary															// Essentially it just tells him to "play x voice line" and "play taunt01", which just so still happens to line up with a working Sniper anim!
		response SniperTauntPrimary															// Copies of Sniper's normal taunt here too so they're equally likely to say something
	}

	rule NOWP-SniperTauntSkewerNonHuntsman
	{
		criteria ConceptPlayerTaunt IsSniper WeaponIsBowType WeaponIsNotHuntsman
		response SniperTauntBow
	}
	rule NOWP-SniperTauntThrowable
	{
		criteria ConceptPlayerTaunt IsSniper WeaponIsThrowMIRV
		response SniperTauntHalloween														// Play the Halloween taunt, at the lack of a better one
	}
	rule NOWP-SniperTauntFistsDM
	{
		criteria ConceptPlayerTaunt IsSniper WeaponIsDMFists
		response SniperTauntPrimary
	}
	rule NOWP-SniperTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsSniper ItemIsNoisemaker
		response SniperTauntPrimary
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-SniperMurderCasual
	{
		scene "scenes/Player/Sniper/low/1604.vcd"	// that was too easy mate
		scene "scenes/Player/Sniper/low/2298.vcd"	// that one's for me boys
		scene "scenes/Player/Sniper/low/2346.vcd"	// all in a day's work
		scene "scenes/Player/Sniper/low/2423.vcd"	// now THAT is how its done!
		scene "scenes/Player/Sniper/low/3109.vcd"	// thatll slow ya down ya twitchy hooligan
	}
	Response NOWP-SniperGoldSMGAdmireSpeech
	{
		scene "scenes/Player/Sniper/low/2433.vcd"	// it's like christmas mornin
		speak "sniper_mvm_loot_godlike02"			// i'm rich!!
		speak "sniper_mvm_loot_rare02"				// not somethin you see every day
		speak "sniper_mvm_loot_rare04"				// queen's bd right there
		speak "sniper_trade_13"						// good as gold, mate
	}
	Response NOWP-BrickKillSniper
	{
		scene "scenes/Player/Sniper/low/1727.vcd"	// standin around like a bloody idiot
		scene "scenes/Player/Sniper/low/1607.vcd"	// now that's downright embarassing
		scene "scenes/Player/Sniper/low/2461.vcd"	// bloody hell you're awful!
		scene "scenes/Player/Sniper/low/3090.vcd"	// inventin loads of new ways of getting killed by me
		scene "scenes/Player/Sniper/low/1725.vcd"	// psssst heheheh
	}
	Response NOWP-SniperKarateYaah
	{
		scene "scenes/Player/Sniper/low/1618.vcd"
	}
	Response NOWP-SniperKarateKick
	{
		scene "scenes/Player/Sniper/low/1614.vcd"
	}

	rule NOWP-MarkerKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsMarker KilledPlayerDelay 30PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-SniperMurderCasual
	}
	rule NOWP-SydneySleeperKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsSydneySleeper KilledPlayerDelay 30PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-BrickKillSniper
	}
	rule NOWP-BrickKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-BrickKillSniper
	}
	rule NOWP-StengunKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsSniperSTEN KilledPlayerDelay 45PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-SniperMurderCasual
		Response NOWP-BrickKillSniper
	}
	rule NOWP-RevolverRifleKillSniper														// Play Sniper Rifle Kill lines occasionally with kills
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsRevolverRifle KilledPlayerDelay 45PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response SniperKill
	}
	rule NOWP-UMP45KillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIs45 KilledPlayerDelay 45PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-SniperMurderCasual
	}
	rule NOWP-ProSMGKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsProSMG KilledPlayerDelay 45PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-SniperMurderCasual
	}
	rule NOWP-GoldenMachineGunKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsGoldMG KilledPlayerDelay 45PercentChance SniperNotKillSpeech
		ApplyContext "SniperKillSpeech:1:10"
		Response NOWP-SniperGoldSMGAdmireSpeech
	}
	rule NOWP-KilledPlayerBoomerangSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsFlingshot KilledPlayerDelay 45PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response KilledPlayerFishwhackerSniper
	}
	rule NOWP-KilledPlayerNonClubSniper														// General responses for if Sniper kills with a non-Kukri melee
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsNotClub KilledPlayerDelay 45PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response KilledPlayerFishwhackerSniper
	}
	rule NOWP-KilledPlayerCrowbarSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsCrowbar KilledPlayerDelay 45PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response KilledPlayerFishwhackerSniper
	}
	rule NOWP-KilledPlayerPanSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsPan KilledPlayerDelay 60PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response NOWP-BrickKillSniper
	}
	rule NOWP-KilledPlayerObjectorSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsObjector KilledPlayerDelay 45PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response KilledPlayerFishwhackerSniper
	}

	Rule NOWP-PlayerKarateChoppingSniper													// Hacky stuff to get Sniper to say Yaah! fairly often when swinging this weapon. Essentially replaces his attack expression
	{
		criteria ConceptFireWeapon IsSniper WeaponIsDMFists 65PercentChance IsNotDaring SniperNotKillSpeechMelee IsNotDominating
		Response NOWP-SniperKarateYaah
		Response NOWP-SniperKarateYaah
		Response NOWP-SniperKarateKick
	}
	rule NOWP-KilledPlayerKarateSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsDMFists KilledPlayerDelay 45PercentChance SniperNotKillSpeechMelee
		ApplyContext "SniperKillSpeechMelee:1:10"
		Response NOWP-SniperKarateYaah
		Response NOWP-SniperKarateKick
		Response KilledPlayerFishwhackerSniper
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	rule NOWP-PlayerJarateToss																// Jarate-only callout!
	{
		criteria ConceptFireWeapon IsSniper WeaponIsThrowMIRV WeaponIsPiss
		Response PlayerJarateToss
	}
	Rule NOWP-MeleeDareJarateSniper															// Jarate melee dare is more subdued than brick
	{
		criteria ConceptPlayerBattleCry IsSniper WeaponIsPiss IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSniperFishwhacker
	}

//------------------------------------//
// Weapon Speech
//------------------------------------//
	Response NOWP-PlayerSkullbusterIdleChatter				// This entire block was a freakin PROJECT. These started as speak scripts but I converted them over to their respective scenes so Scout can talk when idle or firing weapons
	{
		scene "scenes/Player/Scout/low/356.vcd"				// Yeah, yeah, yeah!
		scene "scenes/Player/Scout/low/2509.vcd"			// You see dat?
		scene "scenes/Player/Scout/low/2510.vcd"			// You seein dis?
		scene "scenes/Player/Scout/low/369.vcd"				// Let's get 'em!
		scene "scenes/Player/Scout/low/371.vcd"				// Woohoo!
		scene "scenes/Player/Scout/low/2638.vcd"			// Oh, what's up?
		scene "scenes/Player/Scout/low/2637.vcd"			// Ey!
		scene "scenes/Player/Scout/low/2741.vcd"			// Whoo-ah!
		scene "scenes/Player/Scout/low/2751.vcd"			// Haha!
		scene "scenes/Player/Scout/low/2753.vcd"			// Eheheh
		scene "scenes/Player/Scout/low/390.vcd"				// That freakin' Sniper's a spy!
		scene "scenes/Player/Scout/low/2667.vcd"			// Hit the road bozo let a real scout get ta work
		scene "scenes/Player/Scout/low/2721.vcd"			// There ain't enough crits in the world to kill me!
		scene "scenes/Player/Scout/low/1289.vcd"			// Is-is anyone even payin attention to me!?
		scene "scenes/Player/Scout/low/393.vcd"				// Let's go, let's go, let's go!
		scene "scenes/Player/Scout/low/1286.vcd"			// Let's go!
		scene "scenes/Player/Scout/low/392.vcd"				// Go, go, go!
		scene "scenes/Player/Scout/low/398.vcd"				// Alright, go left
		scene "scenes/Player/Scout/low/402.vcd"				// Yeah, let's go to the right!
		scene "scenes/player/Scout/low/2580.vcd"			// Bring it!
		scene "scenes/player/Scout/low/2582.vcd"			// Let's do dis!
		scene "scenes/player/Scout/low/2583.vcd"			// You n' me!
		scene "scenes/Player/Scout/low/479.vcd"				// Yo, batter up!
		scene "scenes/player/Scout/low/488.vcd"				// We got 'em we got 'em
		scene "scenes/player/Scout/low/500.vcd"				// Whadda you lookin at?
	}
	Response NOWP-PlayerSkullbusterIdleChatterRare
	{
		speak "Scout_sf12_zombie01"							// Grass grows birds fly sun shines and brotha I come back from the dead!
		speak "Scout_sf12_zombie02"							// Brains! Man, I would kill for some brains here!
		speak "Scout_sf12_zombie03"							// Eh, I love brains
		speak "Scout_sf12_zombie04"							// ah, yyknow what would hit the spot? Brains! they're delicious!
		speak "Scout_sf12_zombie05"							// It's not original but it's true I love brains
	}
	Response NOWP-PlayerSkullbusterShotMiss					// Most of these ones have pre-delays to simulate reaction time
	{
		scene "scenes/Player/Scout/low/362.vcd" predelay "2.0"		// You have got to be kidding
		scene "scenes/Player/Scout/low/1281.vcd" predelay "2.0"		// You gotta be kiddin me!
		scene "scenes/Player/Scout/low/364.vcd" predelay "1.33"		// AAUGH!
		scene "scenes/Player/Scout/low/2629.vcd" predelay "1.5"		// Psych!
		scene "scenes/Player/Scout/low/2690.vcd" predelay "1.5"		// Nice try, pal
		scene "scenes/Player/Scout/low/2747.vcd" predelay "1.5"		// De-nied!
		scene "scenes/Player/Scout/low/2750.vcd" predelay "2.0"		// What?
		scene "scenes/Player/Scout/low/2760.vcd" predelay "1.5"		// Nice aim
		scene "scenes/Player/Scout/low/2644.vcd" predelay "2.0"		// It's startin to bore me how much you suck
		scene "scenes/Player/Scout/low/2766.vcd" predelay "1.5"		// Is that all you got moron
		scene "scenes/Player/Scout/low/2654.vcd" predelay "1.5"		// Oh what you gonna cry? You gonna cry now?
		scene "scenes/Player/Scout/low/2564.vcd" predelay "1.5"		// Yeah, next time try two eyes
		scene "scenes/Player/Scout/low/2678.vcd" predelay "2.0"		// 'Depth Perception' pal look into it
		scene "scenes/Player/Scout/low/2558.vcd" predelay "1.5"		// Today ain't your day, pancakes
		scene "scenes/Player/Scout/low/2656.vcd" predelay "1.5"		// Them 200$ bullets aint so hot when they don't hit nothin are they
		scene "scenes/Player/Scout/low/2669.vcd" predelay "1.5"		// What is your major malfunction brotha
		scene "scenes/Player/Scout/low/2672.vcd" predelay "2.0"		// You camped the whole time for THIS!?
		scene "scenes/Player/Scout/low/2729.vcd" predelay "1.33"	// Too slow!
		scene "scenes/Player/Scout/low/2730.vcd" predelay "1.33"	// So close!
		scene "scenes/player/Scout/low/420.vcd" predelay "1.33"		// Pfffft.
		scene "scenes/player/Scout/low/428.vcd" predelay "1.5"		// What the hell was that crap!?
		scene "scenes/player/Scout/low/2706.vcd" predelay "1.5"		// What's the matter, you freakin stupid?
		scene "scenes/Player/Scout/low/2702.vcd" predelay "1.33"	// Nice hustle!
		scene "scenes/Player/Scout/low/2701.vcd" predelay "1.5"		// Real smooth, dummy!
		scene "scenes/Player/Scout/low/1308.vcd" predelay "1.5"		// Oh hey! You. Suck.
	}
	Response NOWP-PlayerSkullbusterKilledSomeone
	{
		scene "scenes/Player/Scout/low/357.vcd"				// I got it, I got it!
		scene "scenes/Player/Scout/low/358.vcd"				// No problem.
		scene "scenes/Player/Scout/low/2511.vcd"			// I dunno who to thank first. Oh I know, me!
		scene "scenes/Player/Scout/low/2681.vcd"			// Bang! I make it look easy
		scene "scenes/Player/Scout/low/2512.vcd"			// Eh, now we're doin it, now we're doin it
		scene "scenes/Player/Scout/low/2516.vcd"			// What'd you guys give up?
		scene "scenes/Player/Scout/low/2535.vcd"			// Yeah, yeah, yeah!
		scene "scenes/Player/Scout/low/2645.vcd"			// Haha! Look at you! You look like you ran through traffic!
		scene "scenes/Player/Scout/low/2649.vcd"			// I don't usually kill morons this fast
		scene "scenes/Player/Scout/low/2691.vcd"			// Hit the bricks pal, ya done
		scene "scenes/Player/Scout/low/395.vcd"				// Atta boy!
		scene "scenes/Player/Scout/low/396.vcd"				// That's what I'm talkin about!
		scene "scenes/Player/Scout/low/397.vcd"				// Dat was all you!
		scene "scenes/Player/Scout/low/452.vcd"				// Eh, nice shootin there
		scene "scenes/Player/Scout/low/453.vcd"				// Wayta go, slugga!
		scene "scenes/Player/Scout/low/2597.vcd"			// Oh dat's a skull fracture for sure
		scene "scenes/Player/Scout/low/2598.vcd"			// Oooh I got all a' dat one
		scene "scenes/Player/Scout/low/2700.vcd"			// Wayta duck!
		scene "scenes/Player/Scout/low/493.vcd"				// Not so tough now are ya? ARE ya!?
		scene "scenes/Player/Scout/low/506.vcd"				// You knuckleheads ain't even worth the effort!
	}
	Response NOWP-PlayerSkullbusterEngiInsults
	{
		scene "scenes/Player/Scout/low/2676.vcd"			// Don't bring a wrench to a gun fight
		scene "scenes/Player/Scout/low/2677.vcd"			// Here's a schematic for ya: my ass!
		scene "scenes/Player/Scout/low/2710.vcd"			// Hey overalls, you suck
	}

// Combat stuff
	rule NOWP-SkullbusterKillSniper
	{
		criteria ConceptKilledPlayer IsSniper WeaponIsSkullbuster KilledPlayerDelay 70PercentChance SniperNotKillSpeech
		ApplyContext "SkullbusterScoutKill:1:15"											// If you get a kill with this and Scout congratulates you, then keep his respect for about 15s!
		ApplyContext "WeaponSpeaking:1:5"													// Supposed to be a buffer so Scout doesn't talk over himself, doesn't seem to really work reliably...
		ApplyContext "SniperHoldStill:1:5"
		Response NOWP-PlayerSkullbusterKilledSomeone
	}
	rule NOWP-SkullbusterFireMissDisrespectSniper											// If you fire the weapon, didn't kill anyone recently, and he's not already talking, sometimes comment on your terrible aim
	{
		criteria ConceptFireWeapon IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutRespectNotEarned 50PercentChance
		ApplyContext "WeaponSpeaking:1:1"
		ApplyContext "SniperHoldStill:1:5"
		Response NOWP-PlayerSkullbusterShotMiss
	}
	rule NOWP-SkullbusterFireMissRespectSniper												// Alt for if he respects you, then just say stuff (can still sometimes criticize you though)
	{
		criteria ConceptFireWeapon IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutRespectEarned 50PercentChance
		ApplyContext "WeaponSpeaking:1:2"
		ApplyContext "SniperHoldStill:1:5"
		Response NOWP-PlayerSkullbusterIdleChatter
		Response NOWP-PlayerSkullbusterIdleChatter
		Response NOWP-PlayerSkullbusterShotMiss
	}
	Rule NOWP-SkullbusterDestroyedBuilding													// When destroying a Building, gain a bit of respect for some time
	{
		criteria ConceptKilledObject IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 50PercentChance
		ApplyContext "SkullbusterScoutKill:1:9"
		ApplyContext "WeaponSpeaking:1:8"
		ApplyContext "SniperHoldStill:1:5"
		Response PlayerKilledObjectScout
		Response NOWP-PlayerSkullbusterEngiInsults
	}
// Idle
	rule NOWP-SkullbusterIdleSniper															// Occasionally, when doing nothing at all, with the weapon drawn, talk. Doesn't care about you being scoped in.
	{
		criteria ConceptPlayerExpression IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 20PercentChance
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-PlayerSkullbusterIdleChatter
	}
	Rule NOWP-SkullbusterHealThanks
	{
		criteria ConceptMedicChargeStopped IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking SuperHighHealthContext ScoutNotSaidHealThanks 50PercentChance
		ApplyContext "ScoutSaidHealThanks:1:20"												// Hehe. TECHNICALLY it's Scout saying it!
		ApplyContext "WeaponSpeaking:1:8"
		Response HealThanksScout
	}
	Rule NOWP-SkullbusterTeleporterThanks
	{
		criteria ConceptTeleported IsNotEngineer IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 20PercentChance
		ApplyContext "WeaponSpeaking:1:8"
		Response PlayerTeleporterThanksScout
	}
	Rule NOWP-SkullbusterJumpPadThanks
	{
		criteria ConceptJumpPadLaunched IsNotEngineer IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 20PercentChance
		ApplyContext "WeaponSpeaking:1:8"
		Response PlayerJumpPadThanksScout
	}

	Rule NOWP-SkullbusterHurtLowHealth
	{
		criteria ConceptPain IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking BonkHealthContext 30PercentChance ScoutNotDrinkReadySpeech
		ApplyContext "ScoutDrinkReadySpeech:1:15"
		ApplyContext "WeaponSpeaking:1:2"
		Response DrinkNotReady
	}
// Objectives
	Rule NOWP-SkullbusterCappedIntelligence
	{
		criteria ConceptPlayerCapturedIntelligence IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 50PercentChance
		ApplyContext "SkullbusterScoutKill:1:30"											// Scout will respect you for a WHILE if you do one of these!
		ApplyContext "WeaponSpeaking:1:8"
		Response PlayerCappedIntelligenceScout
	}
	Rule NOWP-SkullbusterCapturedPoint
	{
		criteria ConceptPlayerCapturedPoint IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking 50PercentChance
		ApplyContext "SkullbusterScoutKill:1:30"
		ApplyContext "WeaponSpeaking:1:8"
		Response PlayerCapturedPointScout
	}

	Rule NOWP-SkullbusterCartMovingStoppedOffense
	{
		criteria ConceptCartMovingStopped IsOnOffense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingStoppedO 50PercentChance
		ApplyContext "SaidCartMovingStoppedO:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingStoppedOffenseScout
	}
	Rule NOWP-SkullbusterCartMovingStoppedDefense
	{
		criteria ConceptCartMovingStopped IsOnDefense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingStoppedD 50PercentChance
		ApplyContext "SaidCartMovingStoppedD:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingStoppedDefenseScout
	}
	Rule NOWP-SkullbusterCartMovingForwardOffense
	{
		criteria ConceptCartMovingForward IsOnOffense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingForwardO 50PercentChance
		ApplyContext "SaidCartMovingForwardO:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingForwardOffenseScout
	}
	Rule NOWP-SkullbusterCartMovingForwardDefense
	{
		criteria ConceptCartMovingForward IsOnDefense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingForwardD 50PercentChance
		ApplyContext "SaidCartMovingForwardD:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingForwardDefenseScout
	}
	Rule NOWP-SkullbusterCartMovingBackwardsOffense
	{
		criteria ConceptCartMovingBackward IsOnOffense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingBackwardO 50PercentChance
		ApplyContext "SaidCartMovingBackwardO:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingBackwardsOffenseScout
	}
	Rule NOWP-SkullbusterCartMovingBackwardsDefense
	{
		criteria ConceptCartMovingBackward IsOnDefense IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking ScoutNotSaidCartMovingBackwardD 50PercentChance
		ApplyContext "SaidCartMovingBackwardD:1:10"
		ApplyContext "WeaponSpeaking:1:5"
		Response CartMovingBackwardsDefenseScout
	}

	Rule NOWP-SkullbusterGetOnPoint
	{
		criterion ConceptFireWeapon IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking IsOnCappableControlPoint NotDefendOnThePointSpeech 75PercentChance
		ApplyContext "DefendOnThePointSpeech:1:15"
		ApplyContext "SkullbusterScoutKill:1:5"
		applycontexttoworld
		Response PlayerGetOnPointScout
	}
	Rule NOWP-SkullbusterDefendOnThePoint
	{
		criteria ConceptFireWeapon IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking IsOnFriendlyControlPoint NotDefendOnThePointSpeech 75PercentChance
		ApplyContext "DefendOnThePointSpeech:1:30"
		ApplyContext "SkullbusterScoutKill:1:5"
		applycontexttoworld
		Response DefendOnThePointScout
	}

// Misc
	Rule NOWP-PlayerSkullbusterSpecialAttack												// Also plays his zombie lines, since, well, he's dead lmao
	{
		criteria ConceptTauntLaugh IsSniper WeaponIsSkullbuster WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:3"
		Response NOWP-PlayerSkullbusterIdleChatter
		Response NOWP-PlayerSkullbusterIdleChatterRare
	}

//------------------------------------------------------------------------------------------------------------//
// Spy
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsEnforcer" 			"item_name" "TF_WEAPON_ENFORCER" 					"required" weight 35
	criterion "WeaponIsDerringer" 			"item_name" "TF_WEAPON_DERRINGER" 					"required" weight 35
	criterion "WeaponIsRadioGun" 			"item_name" "TF_WEAPON_DECOYGUN" 					"required" weight 35
	criterion "WeaponIsAmby" 				"item_name" "TF_WEAPON_AMBASSADOR" 					"required" weight 35
	criterion "WeaponIsInfiltrator" 		"item_name" "TF_WEAPON_INFILTRATOR" 				"required" weight 35

	criterion "WeaponIsTripmine" 			"item_name" "TF_WEAPON_TRAP_CONC" 					"required" weight 35
	criterion "WeaponIsAutoGrinder" 		"item_name" "TF_WEAPON_AUTOGRINDER" 				"required" weight 35

	criterion "WeaponIsKnifeGun" 			"item_name" "TF_WEAPON_KNIFE_GUN" 					"required" weight 35
	criterion "WeaponIsEOSDKnife" 			"item_name" "TF_WEAPON_EOSD_KNIFE" 					"required" weight 35
	criterion "WeaponIsSwitchblade" 		"item_name" "TF_WEAPON_SWITCHBLADE" 				"required" weight 35

	Criterion "LoadoutIsAutoGrinder" 		"loadout_slot_building" "Grind-O-Matic!" 			"required" weight 35

//------------------------------------//
// Live TF2 Taunt Backports [NOTE: DO NOT USE! This is just staging for if they add .vcd hotloading and more anims! None of these responses will work otherwise without extreme hackiness!]
//------------------------------------//
	Response "SpyTauntSpycicle"
	{
		scene "scenes/player/spy/low/taunt01_v1.vcd"
		scene "scenes/player/spy/low/taunt01_v2.vcd"
		scene "scenes/player/spy/low/taunt01_v3.vcd"
		scene "scenes/player/spy/low/taunt01_v4.vcd"
		scene "scenes/player/spy/low/taunt01_v5.vcd"
	}
	Response "SpyTauntBuyALife"																// Haha Civilian taunt. It should be noted it doesn't hide wep, have a prop, or spew money particles...
	{
		scene "scenes/player/spy/low/taunt_buy_a_life.vcd"
	}

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-SpyTauntTripmine																// Since it has no taunt, Disguise kit taunt is semi-fitting!
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsTripmine
		response SpyTauntHalloween
	}
	rule NOWP-SpyTauntGrinder																// Sappers don't usually have taunts, but I thought it'd be funny
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsAutoGrinder
		response SpyTauntHalloween
	}
	rule NOWP-SpyTauntKnifeGun																// Primary taunt since fencing with a sleeve-gun is weird
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsKnifeGun
		response SpyTauntPrimary
	}

	rule NOWP-SpyTauntThrowable
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsThrowMIRV
		response SpyTauntHalloween
	}
	rule NOWP-SpyTauntThrowableBrick														// Custom response for Medic + Spy brick
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsBrickNOWP
		response SpyTauntHalloween
	}
	rule NOWP-SpyTauntFistsDM
	{
		criteria ConceptPlayerTaunt IsSpy WeaponIsDMFists
		response SpyTauntPDA
	}
	rule NOWP-SpyTauntNoisemaker
	{
		criteria ConceptPlayerTaunt IsSpy ItemIsNoisemaker
		response SpyTauntPDA
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//
	Response NOWP-SpyMurderCasual
	{
		scene "scenes/Player/Spy/low/824.vcd"	// you know, hiding won't save you
		scene "scenes/Player/Spy/low/3048.vcd"	// nothing personal I just had to shut you up
		scene "scenes/Player/Spy/low/841.vcd"	// this will be the last time you see me
		scene "scenes/Player/Spy/low/843.vcd"	// you're all of you quite out of your depth
	}
	Response NOWP-SpyJudgementalLines
	{
		scene "scenes/Player/Spy/low/3059.vcd"	// you are an amateur and a fool
		scene "scenes/Player/Spy/low/3013.vcd"	// maybe your colleagues will send a man
		scene "scenes/Player/Spy/low/3046.vcd"	// weren't you supposed to be good at dodging
		scene "scenes/Player/Spy/low/3064.vcd"	// not much of a quick draw are you partner
	}
	Response NOWP-BrickKillSpy
	{
		scene "scenes/Player/Spy/low/3063.vcd"	// did i throw a wrench into your plans
		scene "scenes/Player/Spy/low/3026.vcd"	// laughter really is the best medicine
		scene "scenes/Player/Spy/low/3071.vcd"	// does it hurt when i do that?
		scene "scenes/Player/Spy/low/3036.vcd"	// oh please just stay down
	}

	rule NOWP-EnforcerKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsEnforcer KilledPlayerDelay 30PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}
	rule NOWP-DerringerKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsDerringer KilledPlayerDelay 30PercentChance SpyNotKillSpeech IsNotDisguised	// Just covering my bases, here, it's one of the only weapons that can kill while actively disguised
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}
	rule NOWP-RadioGunKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsRadioGun KilledPlayerDelay 75PercentChance SpyNotKillSpeech IsNotDisguised
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-BrickKillSpy																								// How in sam hill are you gonna get a kill with THIS!? Well, Spy's gonna find it just as funny as you do
		Response NOWP-BrickKillSpy
		Response NOWP-SpyJudgementalLines
	}
	rule NOWP-AmbassadorKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsAmby KilledPlayerDelay 30PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}
	rule NOWP-ObjectiveGunKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsInfiltrator KilledPlayerDelay 30PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}
	rule NOWP-KnifeGunKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsKnifeGun KilledPlayerDelay 45PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response KilledPlayerManySpy																							// Chance to play his usual Revolver-kill lines instead
	}
	rule NOWP-EOSDKnifeKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsEOSDKnife KilledPlayerDelay 45PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}
	rule NOWP-SwitchbladeKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsSwitchblade KilledPlayerDelay 45PercentChance SpyNotKillSpeech
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-SpyMurderCasual
	}

	rule NOWP-BrickKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsBrickNOWP KilledPlayerDelay 60PercentChance SpyNotKillSpeech IsNotDisguised
		ApplyContext "SpyKillSpeech:1:10"
		Response NOWP-BrickKillSpy
	}
	rule NOWP-PanKillSpy
	{
		criteria ConceptKilledPlayer IsSpy WeaponIsPan KilledPlayerDelay 60PercentChance SpyNotKillSpeechMelee
		ApplyContext "SpyKillSpeechMelee:1:10"
		Response NOWP-BrickKillSpy
	}

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Rule NOWP-GrinderDestroyedSpy																								// Complains more often when this is destroyed (AND HE'S UNDISGUISED DON'T FORGET!!)
	{
		criteria ConceptLostObject IsSpy WeaponIsAutoGrinder 30PercentChance IsNotDisguised
		ApplyContext "LostSapper:1:10"
		Response PlayerNegativeSpy
		Response PlayerJeersSpy
	}
	Rule NOWP-GrinderDestroyedSpyInactive
	{
		criteria ConceptLostObject IsSpy LoadoutIsAutoGrinder 15PercentChance IsNotDisguised
		ApplyContext "LostSapper:1:10"
		Response PlayerNegativeSpy
		Response PlayerNegativeSpy
		Response PlayerJeersSpy
	}




//------------------------------------------------------------------------------------------------------------//
// Civilian (TF2C)
//------------------------------------------------------------------------------------------------------------//
	criterion "WeaponIsDebuff" 				"item_name" "TF_WEAPON_REVOLVER_CIVILIAN_ALT" 			"required" weight 35
	criterion "WeaponIsJackal" 				"item_name" "TF_WEAPON_JACKAL_STAFF" 					"required" weight 35

//------------------------------------//
// Taunt Responses
//------------------------------------//
	rule NOWP-CivilianTauntThrowable														// Melee taunt since Civ has like almost no other taunts
	{
		criteria ConceptPlayerTaunt IsCivilian WeaponIsThrowMIRV
		response CivilianTauntMelee
	}

//------------------------------------//
// Kill + Weapon Firing  Responses
//------------------------------------//

//------------------------------------//
// Misc / Other Responses
//------------------------------------//
	Response NOWP-CivilianDebuffApplyEnemy
	{
		scene "scenes/Player/Civilian/low/Domination01.vcd"
		scene "scenes/Player/Civilian/low/Domination02.vcd"
		scene "scenes/Player/Civilian/low/Failure04.vcd"
		scene "scenes/Player/Civilian/low/NegativeVocalization01.vcd"
		scene "scenes/Player/Civilian/low/Taunts03.vcd"	// Not present?
		scene "scenes/Player/Civilian/low/Taunts04.vcd"	// Not present?
		scene "scenes/Player/Civilian/low/Taunts05.vcd"	// Not present?
	}
	Response NOWP-MeleeDareCombatCivilianGeneric											// Hacky section since Speak-style lines don't work for firing weapons at all
	{
		scene "scenes/Player/Civilian/low/Domination01.vcd"
		scene "scenes/Player/Civilian/low/Domination02.vcd"
		scene "scenes/Player/Civilian/low/Domination04.vcd"
		scene "scenes/Player/Civilian/low/Domination06.vcd"
		scene "scenes/Player/Civilian/low/Domination07.vcd"
		scene "scenes/Player/Civilian/low/AutoDejectedTie01.vcd"
		scene "scenes/Player/Civilian/low/Jeers02.vcd"
		scene "scenes/Player/Civilian/low/Success05.vcd"
	}
	Response NOWP-MeleeDareCombatCivilian
	{
		speak "Civilian.MeleeDare01"	// oh they will regret approaching us
		speak "Civilian.MeleeDare02"	// let's get to the fun part.
		speak "Civilian.MeleeDare03"	// they shall -fall-
		speak "Civilian.MeleeDare04"	// oh dear i appear to be in a bad situation right at this moment!!
	}
	Response NOWP-MeleeDareCombatCivilianConfident
	{
		speak "Civilian.MeleeDare01"	// oh they will regret approaching us
		speak "Civilian.MeleeDare02"	// let's get to the fun part.
		speak "Civilian.MeleeDare03"	// they shall -fall-
	}
	Response NOWP-PushAheadCivilian
	{
		speak "Civilian.PushAhead01"
		speak "Civilian.PushAhead02"
		speak "Civilian.PushAhead03"
		speak "Civilian.PushAhead04"
		speak "Civilian.PushAhead05"
		speak "Civilian.PushAhead06"
		speak "Civilian.PushAhead07"
	}

	Rule NOWP-PlayerDebuffCivilian																	// Special responses for a debuff boost!
	{
		criteria ConceptPlayerBattleCry IsCivilian WeaponIsDebuff IsCrossHairEnemy
		Response NOWP-CivilianDebuffApplyEnemy
	}
	Rule NOWP-PlayerBoostJackalCivilian_1															// More shit copied from Disp. Action
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnScout
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_2
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnSoldier
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_3
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnPyro
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_4
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnDemoman
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_5
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnHeavy
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_6
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnEngineer
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_7
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnMedic
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_8
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnSniper
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_9															// There's some weird behavior with disguised enemy Spies, but since it occurs with regular Melee Dares too, screw it
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnSpy
		Response NOWP-MeleeDareCombatCivilianConfident
	}
	Rule NOWP-PlayerBoostJackalCivilian_10
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsJackal IsNotCrossHairEnemy IsOnCivilian
		Response NOWP-MeleeDareCombatCivilianConfident
	}

	Rule NOWP-PlayerBoostCivilianExtra_1															// More shit copied from Disp. Action, this time for any weapon of his that isn't an Umbrella
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnScout
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_2
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnSoldier
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_3
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnPyro
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_4
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnDemoman
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_5
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnHeavy
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_6
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnEngineer
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_7
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnMedic
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_8
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnSniper
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_9															// There's some weird behavior with disguised enemy Spies, but since it occurs with regular Melee Dares too, screw it
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnSpy
		Response NOWP-PushAheadCivilian
	}
	Rule NOWP-PlayerBoostCivilianExtra_10
	{
		criteria ConceptPlayerGo IsCivilian WeaponIsNotUmbrellaType IsNotCrossHairEnemy IsOnCivilian
		Response NOWP-PushAheadCivilian
	}

	rule NOWP-FishEventKillCivMackerel																// Every now and then, if you get a kill with the Holy Mackerel, play a laugh track!
	{
		criteria ConceptKilledPlayer IsCivilian WeaponIsFish 25PercentChance WeaponIsNotSpeaking
		ApplyContext "WeaponSpeaking:1:8"
		Response NOWP-SmallEventKill
	}

//------------------------------------//
// Weapon Speech
//------------------------------------//
	Response NOWP-PlayerGuitarStrum																	// Put all the way down here so most default classes can use this should they be given the Bonkulele + appropriate responses
	{
		speak "Weapon_Guitar.DrawStrum"
	}
	Response NOWP-SamuraiKoto
	{
		speak "Samurai.Koto"
	}

	Rule NOWP-PlayerGuitarSpecialAttackPyro
	{
		criteria ConceptTauntLaugh WeaponIsUkulele IsNotCrossHairEnemy WeaponIsNotSpeaking IsPyro
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-PlayerGuitarStrum
	}
	Rule NOWP-PlayerGuitarSpecialAttackEngi
	{
		criteria ConceptTauntLaugh IsWeaponMelee WeaponIsUkulele IsNotCrossHairEnemy WeaponIsNotSpeaking IsEngineer	// The Class isn't really important to the line, but the game refuses to play lines if you don't specifically check what class they are
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-PlayerGuitarStrum
	}
	Rule NOWP-PlayerGuitarSpecialAttackEngiAlsoTeamRadio
	{
		criteria ConceptTauntLaugh IsEngineer IsWeaponMelee WeaponIsNotPan WeaponIsUkulele IsNotCrossHairEnemy LoadoutIsTeamRadio WeaponIsNotSpeaking	// Scuffed since both have their own responses, makes it so that Ukulele plays 2/3 of the time
		ApplyContext "WeaponSpeaking:1:7"
		Response NOWP-PlayerTeamRadioChatter
		Response NOWP-PlayerGuitarStrum
		Response NOWP-PlayerGuitarStrum
	}
	Rule NOWP-PlayerGuitarSpecialAttackMedic
	{
		criteria ConceptTauntLaugh WeaponIsUkulele IsNotCrossHairEnemy WeaponIsNotSpeaking IsMedic
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-PlayerGuitarStrum
	}

	Rule NOWP-PlayerKatanaSpecialAttackSoldier
	{
		criteria ConceptTauntLaugh WeaponIsTWKatana IsNotCrossHairEnemy WeaponIsNotSpeaking IsSoldier
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-SamuraiKoto
	}
	Rule NOWP-PlayerKatanaSpecialAttackDemo
	{
		criteria ConceptTauntLaugh WeaponIsTWKatana IsNotCrossHairEnemy WeaponIsNotSpeaking IsDemoman
		ApplyContext "WeaponSpeaking:1:5"
		Response NOWP-SamuraiKoto
	}

//------------------------------------------------------------------------------------------------------------//
// All-Class (Down here so everything else is loaded first)
//------------------------------------------------------------------------------------------------------------//

// Laugh Taunt + Laugh Response Ridiculousness
//----------
	Response NOWP-ScoutLaughLong
	{
		scene "scenes/Player/Scout/low/435.vcd"												// Most classes have more funny laugh lines, but just the Schadenfreude ones here for now bc lazyyyy
	}
	Response NOWP-SoldierLaughLong
	{
		scene "scenes/Player/Soldier/low/1349.vcd"
	}
	Response NOWP-PyroLaughLong
	{
		speak "Pyro.laugh_addl04"															// Have to use the direct SoundScript since I can't find / don't know if a .vcd exists for it...
	}
	Response NOWP-DemomanLaughLong
	{
		scene "scenes/Player/Demoman/low/954.vcd"
	}
	Response NOWP-HeavyLaughLong
	{
		speak "Heavy.LaugherBigSnort01"														// Ditto
	}
	Response NOWP-EngineerLaughLong
	{
		speak "Engineer.LaughLong02"														// Ditto
	}
	Response NOWP-MedicLaughLong
	{
		scene "scenes/Player/Medic/low/607.vcd"
	}
	Response NOWP-SniperLaughLong
	{
		scene "scenes/Player/Sniper/low/1675.vcd"
	}
	Response NOWP-SpyLaughLong
	{
		scene "scenes/Player/Spy/low/775.vcd"
	}
	Response NOWP-CivilianLaughLong
	{
		speak "Civilian.LaughLong01"
	}

	Rule NOWP-MeleeDarePanScout
	{
		criteria ConceptPlayerBattleCry IsScout WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"														// Can only use it once every 3s, otherwise defaults to regular Battlecry rules
		Response NOWP-ScoutLaughLong													// This lets you use regular battlecries... on melee... on Pan... if you want that??
	}
	Rule NOWP-MeleeDarePanSoldier
	{
		criteria ConceptPlayerBattleCry IsSoldier WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-SoldierLaughLong
	}
	Rule NOWP-MeleeDarePanPyro
	{
		criteria ConceptPlayerBattleCry IsPyro WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-PyroLaughLong
	}
	Rule NOWP-MeleeDarePanDemoman
	{
		criteria ConceptPlayerBattleCry IsDemoman WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-DemomanLaughLong
	}
	Rule NOWP-MeleeDarePanHeavy
	{
		criteria ConceptPlayerBattleCry IsHeavy WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-HeavyLaughLong
	}
	Rule NOWP-MeleeDarePanEngineer
	{
		criteria ConceptPlayerBattleCry IsEngineer WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-EngineerLaughLong
	}
	Rule NOWP-MeleeDarePanMedic
	{
		criteria ConceptPlayerBattleCry IsMedic WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-MedicLaughLong
	}
	Rule NOWP-MeleeDarePanSniper
	{
		criteria ConceptPlayerBattleCry IsSniper WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-SniperLaughLong
	}
	Rule NOWP-MeleeDarePanSpy
	{
		criteria ConceptPlayerBattleCry IsSpy WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-SpyLaughLong
	}
	Rule NOWP-MeleeDarePanCivilian
	{
		criteria ConceptPlayerBattleCry IsCivilian WeaponIsPan IsNotCrossHairEnemy IsNotStillLaughing
		ApplyContext "Laughing:1:3"
		Response NOWP-CivilianLaughLong
	}

// Throwable Responses
//----------
	Response NOWP-TossThrowableScout														// Scout's Mad Milk / Cleaver lines
	{
		scene "scenes/player/Scout/low/504.vcd"
		scene "scenes/player/Scout/low/2705.vcd"
		scene "scenes/player/Scout/low/2604.vcd"
	}
	Response NOWP-TossThrowableSoldier
	{
		scene "scenes/Player/Soldier/low/1060.vcd"
		scene "scenes/Player/Soldier/low/1114.vcd"
		scene "scenes/Player/Soldier/low/1185.vcd"
	}
	Response NOWP-TossThrowablePyro															// Pyro's Gas Passer lines - brand new!
	{
		scene "scenes/Player/Pyro/low/1419.vcd"
		scene "scenes/Player/Pyro/low/1457.vcd"
		scene "scenes/Player/Pyro/low/1460.vcd"
	}
	Response NOWP-TossThrowableDemoman
	{
		scene "scenes/Player/Demoman/low/1008.vcd"
		scene "scenes/Player/Demoman/low/1358.vcd"
		scene "scenes/Player/Demoman/low/1379.vcd"
	}
	Response NOWP-TossThrowableHeavy
	{
		scene "scenes/player/heavy/low/1980.vcd"
		scene "scenes/Player/Heavy/low/253.vcd"
		scene "scenes/Player/Heavy/low/1979.vcd"
	}
	Response NOWP-TossThrowableEngineer
	{
		scene "scenes/Player/Engineer/low/36.vcd"	// heeeeyaw!
		scene "scenes/Player/Engineer/low/69.vcd"	// git goin!
		scene "scenes/Player/Engineer/low/3697.vcd"	// go on git!
	}
	Response NOWP-TossThrowableMedic
	{
		scene "scenes/Player/Medic/low/537.vcd" 
		scene "scenes/Player/Medic/low/541.vcd" 
		scene "scenes/Player/Medic/low/653.vcd" 
	}
	Response NOWP-TossThrowableSniper														// Sniper's Jarate lines minus the Jarate callout
	{
//		scene "scenes/Player/Sniper/low/3131.vcd" 
		scene "scenes/Player/Sniper/low/3132.vcd" 
		scene "scenes/Player/Sniper/low/3133.vcd" 
	}
	Response NOWP-TossThrowableSpy
	{
		scene "scenes/Player/Spy/low/707.vcd" 
		scene "scenes/Player/Spy/low/817.vcd" 
		scene "scenes/Player/Spy/low/820.vcd" 
	}
	Response NOWP-TossThrowableCivilian
	{
		scene "scenes/Player/Civilian/low/Domination01.vcd"
		scene "scenes/Player/Civilian/low/Incoming01.vcd"
		scene "scenes/Player/Civilian/low/Go04.vcd"
		scene "scenes/Player/Civilian/low/Taunts02.vcd"	// Not present?
		scene "scenes/Player/Civilian/low/Taunts05.vcd"	// Not present?
	}

	rule NOWP-TossThrowableScout															// Everyone has a callout when throwing stuff in NOWP, a-la the various callouts in Live TF2
	{
		criteria ConceptFireWeapon IsScout WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"											// Slight buffer to reduce repetition of lines slightly
		Response NOWP-TossThrowableScout
	}
	rule NOWP-TossThrowableCleaverScout														// Fix for cleaver since I fORGOT
	{
		criteria ConceptFireWeapon IsScout WeaponIsCleaver HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableScout
	}
	rule NOWP-TossThrowableSoldier
	{
		criteria ConceptFireWeapon IsSoldier WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableSoldier
	}
	rule NOWP-TossThrowableBucketSoldier
	{
		criteria ConceptFireWeapon IsSoldier WeaponIsThrowMIRV WeaponIsBucket HasntThrownRecently
		ApplyContext "ThrewBucketRecently:1:8"												// For about 8s after throwing the Bucket, set him as valid for triggering Bucket Primary Kill lines
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableSoldier
	}
	rule NOWP-TossThrowablePyro																// Note: Due to its internals, the Thermal Thruster has to be manually left out!
	{
		criteria ConceptFireWeapon IsPyro WeaponIsThrowMIRV WeaponIsNotJetpackPyro HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowablePyro
	}
	rule NOWP-TossThrowableDemoman															// When Demo throws a throwable that ISN'T the MIRV! This is to keep base behavior since he doesn't normally say anything.
	{
		criteria ConceptFireWeapon IsDemoman WeaponIsThrowMIRV WeaponIsNotMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableDemoman
	}
	rule NOWP-TossThrowableHeavy
	{
		criteria ConceptFireWeapon IsHeavy WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableHeavy
	}
	rule NOWP-TossThrowableEngineer
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableEngineer
	}
	rule NOWP-TossThrowableMedic
	{
		criteria ConceptFireWeapon IsMedic WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableMedic
	}
	rule NOWP-TossThrowableBrickMedic														// For these two, special exception for the Brick since that's not a MIRV anymore
	{
		criteria ConceptFireWeapon IsMedic WeaponIsBrickNOWP HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableMedic
	}
	rule NOWP-TossThrowableSniper															// Specifically for generic throwables, Sniper won't make the Jarate callout
	{
		criteria ConceptFireWeapon IsSniper WeaponIsThrowMIRV WeaponIsNotPiss HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableSniper 
	}
	rule NOWP-TossThrowableSpy																// For MIRV-type throwables, when not disguised
	{
		criteria ConceptFireWeapon IsSpy WeaponIsThrowMIRV HasntThrownRecently IsNotDisguised
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableSpy
	}
	rule NOWP-TossThrowableBrickSpy															// For these two, special exception for the Brick since that's not a MIRV anymore
	{
		criteria ConceptFireWeapon IsSpy WeaponIsBrickNOWP HasntThrownRecently IsNotDisguised
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableSpy
	}
	rule NOWP-TossThrowableCivilian
	{
		criteria ConceptFireWeapon IsCivilian WeaponIsThrowMIRV HasntThrownRecently
		ApplyContext "ThrewSomethingRecently:1:2"
		Response NOWP-TossThrowableCivilian
	}

	Rule NOWP-MeleeDareThrowableScout														// Not only can you melee dare with the Brick, it plays the Invuln'd lines...
	{
		criteria ConceptPlayerBattleCry IsScout WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatScout
		Response InvulnerableSpeechScout
	}
	Rule NOWP-MeleeDareThrowableCleaverScout
	{
		criteria ConceptPlayerBattleCry IsScout WeaponIsCleaver IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatScout
		Response InvulnerableSpeechScout
	}
	Rule NOWP-MeleeDareThrowableSoldier
	{
		criteria ConceptPlayerBattleCry IsSoldier WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSoldier
		Response InvulnerableSpeechSoldier
	}
	Rule NOWP-MeleeDareThrowablePyro														// Not for the Jetpack
	{
		criteria ConceptPlayerBattleCry IsPyro WeaponIsThrowMIRV WeaponIsNotJetpackPyro IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
//		Response MeleeDareCombatPyro
		Response MeleePyroCombatPyro														// Yes it's misspelled. Blame them
		Response InvulnerableSpeechPyro
	}
	Rule NOWP-MeleeDareThrowableDemoman														// Not for default MIRV
	{
		criteria ConceptPlayerBattleCry IsDemoman WeaponIsThrowMIRV WeaponIsNotMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatDemoman
		Response InvulnerableSpeechDemoman
	}
	Rule NOWP-MeleeDareThrowableHeavy
	{
		criteria ConceptPlayerBattleCry IsHeavy WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatHeavy
//		Response InvulnerableSpeechHeavy													// These are more specific to invincibility or the presence of a Medic than I'd like, so disabled for now
	}
	Rule NOWP-MeleeDareThrowableEngineer
	{
		criteria ConceptPlayerBattleCry IsEngineer WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatEngineer
		Response InvulnerableSpeechEngineer
	}
	Rule NOWP-MeleeDareThrowableMedic
	{
		criteria ConceptPlayerBattleCry IsMedic WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatMedic
		Response InvulnerableSpeechCombatMedic
	}
	Rule NOWP-MeleeDareThrowableBrickMedic
	{
		criteria ConceptPlayerBattleCry IsMedic WeaponIsBrickNOWP IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatMedic
		Response InvulnerableSpeechCombatMedic
	}
	Rule NOWP-MeleeDareThrowableSniper														// Jarate included since it's funny
	{
		criteria ConceptPlayerBattleCry IsSniper WeaponIsThrowMIRV WeaponIsNotPiss IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSniperFishwhacker
		Response InvulnerableSpeechSniper
	}
	Rule NOWP-MeleeDareThrowableSpy
	{
		criteria ConceptPlayerBattleCry IsSpy WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSpy
		Response InvulnerableSpeechSpy
	}
	Rule NOWP-MeleeDareThrowableSpy
	{
		criteria ConceptPlayerBattleCry IsSpy WeaponIsBrickNOWP IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response MeleeDareCombatSpy
		Response InvulnerableSpeechSpy
	}
	Rule NOWP-MeleeDareThrowableCivilian
	{
		criteria ConceptPlayerBattleCry IsCivilian WeaponIsThrowMIRV IsCrosshairEnemy
		ApplyContext "IsDaring:1:5"
		Response NOWP-MeleeDareCombatCivilian
	}

// DM Fist stuff
//----------
	Rule NOWP-ScoutSwingFistsDM																// When swinging the DM Fists, 30% chance to say something (currently a Melee Dare)
	{
		criteria ConceptFireWeapon IsScout WeaponIsDMFists 30PercentChance IsNotDaring ScoutNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatScout
	}
	Rule NOWP-SoldierSwingFistsDM
	{
		criteria ConceptFireWeapon IsSoldier WeaponIsDMFists 30PercentChance IsNotDaring SoldierNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatSoldier
	}
	Rule NOWP-PyroSwingFistsDM
	{
		criteria ConceptFireWeapon IsPyro WeaponIsDMFists 30PercentChance IsNotDaring PyroNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
//		Response MeleeDareCombatPyro
		Response MeleePyroCombatPyro
	}
	Rule NOWP-DemomanSwingFistsDM															// For Demoman DM Fists, also spout drunk lines sometimes
	{
		criteria ConceptFireWeapon IsDemoman WeaponIsDMFists 30PercentChance IsNotDaring DemomanNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatDemoman
		Response KilledPlayerPanDemoman
	}
	Rule NOWP-HeavySwingFistsDM
	{
		criteria ConceptFireWeapon IsHeavy WeaponIsDMFists 30PercentChance IsNotDaring HeavyNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatHeavy
	}
	Rule NOWP-EngineerSwingFistsDM
	{
		criteria ConceptFireWeapon IsEngineer WeaponIsDMFists 30PercentChance IsNotDaring IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatEngineer
		Response EngySwingFistStart
		Response EngySwingFistStart															// Slightly more often he says one of the Gunslinger swinging lines
	}
	Rule NOWP-MedicSwingFistsDM
	{
		criteria ConceptFireWeapon IsMedic WeaponIsDMFists 30PercentChance IsNotDaring MedicNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatMedic
	}
	Rule NOWP-SniperSwingFistsDM
	{
		criteria ConceptFireWeapon IsSniper WeaponIsDMFists 30PercentChance IsNotDaring SniperNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatSniperFishwhacker											// A version of Melee Dare that says less kukri-related lines
	}
	Rule NOWP-SpySwingFistsDM
	{
		criteria ConceptFireWeapon IsSpy WeaponIsDMFists 30PercentChance IsNotDaring SpyNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging IsNotDisguised
		ApplyContext "HeavyFistsSwinging:1:10"
		Response MeleeDareCombatSpy
	}
	Rule NOWP-CivilianSwingFistsDM
	{
		criteria ConceptFireWeapon IsCivilian WeaponIsDMFists 30PercentChance IsNotDaring CivilianNotKillSpeechMelee IsNotDominating IsNotHeavyFistsSwinging
		ApplyContext "HeavyFistsSwinging:1:10"
		Response NOWP-MeleeDareCombatCivilianGeneric										// Special exclude since Speak-style lines don't work for firing weapons
	}

// Noisemaker stuff
//----------
	Rule NOWP-ScoutUseNoisemaker															// For everyone, for ANY noisemaker, have a low chance to say something!
	{
		criteria ConceptFireWeapon IsScout ItemIsNoisemaker 15PercentChance ScoutNotAwardSpeech	// Otherwise follows most of the standard achievement line rules. No domination context tho
		ApplyContext "ScoutAwardSpeech:1:5"
		Response AwardScout
		Response PlayerCheersScout
	}
	Rule NOWP-SoldierUseNoisemaker
	{
		criteria ConceptFireWeapon IsSoldier ItemIsNoisemaker 15PercentChance SoldierNotAwardSpeech
		ApplyContext "SoldierAwardSpeech:1:5"
		Response AwardSoldier
		Response PlayerCheersSoldier
	}
	Rule NOWP-PyroUseNoisemaker
	{
		criteria ConceptFireWeapon IsPyro ItemIsNoisemaker 15PercentChance PyroNotAwardSpeech
		ApplyContext "PyroAwardSpeech:1:5"
		Response AwardPyro
		Response PlayerCheersPyro
	}
	Rule NOWP-DemomanUseNoisemaker
	{
		criteria ConceptFireWeapon IsDemoman ItemIsNoisemaker 15PercentChance DemomanNotAwardSpeech
		ApplyContext "DemomanAwardSpeech:1:5"
		Response AwardDemoman
		Response PlayerCheersDemoman
	}
	Rule NOWP-HeavyUseNoisemaker
	{
		criteria ConceptFireWeapon IsHeavy ItemIsNoisemaker 15PercentChance HeavyNotAwardSpeech
		ApplyContext "HeavyAwardSpeech:1:5"
		Response AwardHeavy
		Response PlayerCheersHeavy
	}
	Rule NOWP-EngineerUseNoisemaker
	{
		criteria ConceptFireWeapon IsEngineer ItemIsNoisemaker 15PercentChance IsNotDaring
		ApplyContext "EngineerAwardSpeech:1:5"
		Response AwardEngineer
		Response PlayerCheersEngineer
	}
	Rule NOWP-MedicUseNoisemaker
	{
		criteria ConceptFireWeapon IsMedic ItemIsNoisemaker 15PercentChance MedicNotAwardSpeech
		ApplyContext "MedicAwardSpeech:1:5"
		Response AwardMedic
		Response PlayerCheersMedic
	}
	Rule NOWP-SniperUseNoisemaker
	{
		criteria ConceptFireWeapon IsSniper ItemIsNoisemaker 15PercentChance SniperNotAwardSpeech
		ApplyContext "SniperAwardSpeech:1:5"
		Response AwardSniper
		Response PlayerCheersSniper
	}
	Rule NOWP-SpyUseNoisemaker
	{
		criteria ConceptFireWeapon IsSpy ItemIsNoisemaker 15PercentChance SpyNotAwardSpeech IsNotDisguised
		ApplyContext "SpyAwardSpeech:1:5"
		Response AwardSpy
		Response PlayerCheersSpy
	}
	Rule NOWP-CivilianUseNoisemaker
	{
		criteria ConceptFireWeapon IsCivilian ItemIsNoisemaker 15PercentChance CivilianNotAwardSpeech
		ApplyContext "CivilianAwardSpeech:1:5"
		Response AwardCivilian
		Response PlayerCheersCivilian
	}
